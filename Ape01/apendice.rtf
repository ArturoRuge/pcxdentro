{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi0\deflang11274\deflangfe11274\themelang11274\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f4\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Helvetica;}
{\f4\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Helvetica;}{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhimajor\f31502\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0302020204030204}Calibri Light;}
{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}
{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f39\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\f40\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f42\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f43\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f44\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f45\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f46\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f47\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f79\fbidi \fswiss\fcharset238\fprq2 Helvetica CE;}{\f80\fbidi \fswiss\fcharset204\fprq2 Helvetica Cyr;}
{\f82\fbidi \fswiss\fcharset161\fprq2 Helvetica Greek;}{\f83\fbidi \fswiss\fcharset162\fprq2 Helvetica Tur;}{\f84\fbidi \fswiss\fcharset177\fprq2 Helvetica (Hebrew);}{\f85\fbidi \fswiss\fcharset178\fprq2 Helvetica (Arabic);}
{\f86\fbidi \fswiss\fcharset186\fprq2 Helvetica Baltic;}{\f87\fbidi \fswiss\fcharset163\fprq2 Helvetica (Vietnamese);}{\f79\fbidi \fswiss\fcharset238\fprq2 Helvetica CE;}{\f80\fbidi \fswiss\fcharset204\fprq2 Helvetica Cyr;}
{\f82\fbidi \fswiss\fcharset161\fprq2 Helvetica Greek;}{\f83\fbidi \fswiss\fcharset162\fprq2 Helvetica Tur;}{\f84\fbidi \fswiss\fcharset177\fprq2 Helvetica (Hebrew);}{\f85\fbidi \fswiss\fcharset178\fprq2 Helvetica (Arabic);}
{\f86\fbidi \fswiss\fcharset186\fprq2 Helvetica Baltic;}{\f87\fbidi \fswiss\fcharset163\fprq2 Helvetica (Vietnamese);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fhimajor\f31528\fbidi \fswiss\fcharset238\fprq2 Calibri Light CE;}{\fhimajor\f31529\fbidi \fswiss\fcharset204\fprq2 Calibri Light Cyr;}{\fhimajor\f31531\fbidi \fswiss\fcharset161\fprq2 Calibri Light Greek;}
{\fhimajor\f31532\fbidi \fswiss\fcharset162\fprq2 Calibri Light Tur;}{\fhimajor\f31533\fbidi \fswiss\fcharset177\fprq2 Calibri Light (Hebrew);}{\fhimajor\f31534\fbidi \fswiss\fcharset178\fprq2 Calibri Light (Arabic);}
{\fhimajor\f31535\fbidi \fswiss\fcharset186\fprq2 Calibri Light Baltic;}{\fhimajor\f31536\fbidi \fswiss\fcharset163\fprq2 Calibri Light (Vietnamese);}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}
{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}
{\fhiminor\f31573\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew);}{\fhiminor\f31574\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic);}{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}
{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\*\defchp \fs22\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap \ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 
\fs22\lang11274\langfe11274\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp11274\langfenp11274 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \ssemihidden \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs22\alang1025 \ltrch\fcs0 \fs22\lang11274\langfe11274\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp11274\langfenp11274 \snext11 \ssemihidden \sunhideused 
Normal Table;}}{\*\rsidtbl \rsid10114890\rsid11623441\rsid12666282\rsid14181976}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\operator Usuario de Windows}
{\creatim\yr2017\mo5\dy8\hr22\min11}{\revtim\yr2017\mo5\dy8\hr22\min41}{\version3}{\edmins25}{\nofpages36}{\nofwords12888}{\nofchars70887}{\nofcharsws83608}{\vern57433}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}
\paperw12240\paperh15840\margl1440\margr1440\margt1417\margb1417\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\hyphhotz425\trackmoves0\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120
\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\rsidroot14181976 \fet0{\*\wgrffmtfilter 2450}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}
{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9
\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs22\alang1025 
\ltrch\fcs0 \fs22\lang11274\langfe11274\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp11274\langfenp11274 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\insrsid10114890 
\par \loch\af4\dbch\af31505\hich\f4 \emdash \emdash \emdash \loch\f4 133-1355
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 # **Ap\'e9\loch\f4 ndice 1 de I**
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 # REPRESENTACI\'d3\loch\f4 \hich\f4 N DE N\'da\loch\f4 MEROS BINARIOS NATURALES Y OPERACIONES CON ELLOS
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ## A1.1 SISTEMAS NUM\'c9\loch\f4 RICOS POSICIONALES
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ### \'bf\loch\f4 \hich\f4 Qu\'e9\loch\f4  es \hich\af4\dbch\af31505\loch\f4 \hich\f4 un sistema num\'e9\loch\f4 rico posicional?
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 La necesidad de representar conjuntos de objetos ha llevado a las distintas culturas a adoptar diversas formas de simbolizar su valor num\'e9\loch\f4 \hich\f4 rico. Una manera primera de representar el n\'fa
\loch\f4 mero de elementos que constituyen un cie\hich\af4\dbch\af31505\loch\f4 \hich\f4 rto conjunto, es establecer una correspondencia con un n\'fa\loch\f4 \hich\f4 mero igual de s\'ed\loch\f4 \hich\f4 
mbolos. Esto lo hacemos cuando cantamos con los dedos, o s\'ed\loch\f4 \hich\f4  para representar, como ser, los d\'ed\loch\f4 \hich\f4 as de la semana, dibujamos igual n\'fa\loch\f4 mero de trazos: |\~|\~| | | | |
\par \hich\af4\dbch\af31505\loch\f4 Tal sistema de represent\hich\af4\dbch\af31505\loch\f4 \hich\f4 aci\'f3\loch\f4 \hich\f4 n seria \'93\loch\f4 \hich\f4 uranio\'94\loch\f4 \hich\f4 , pues se usa un solo tipo de s\'ed\loch\f4 \hich\f4 
mbolo. Su desventaja es que no permite simbolizar c\'f3\loch\f4 \hich\f4 moda y r\'e1\loch\f4 pidamente conjuntos con muchos elementos,
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Cuando fue necesario designar la existencia de muchos elementos, se trat\'f3\loch\f4  siempre de utilizar la men\hich\af4\dbch\af31505\loch\f4 \hich\f4 or cantidad de s\'ed\loch\f4 \hich\f4 
mbolos, para lo cual se estableciera operaciones impl\'ed\loch\f4 citas entre los mismos.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Los romanos utilizaron un sistema de signos de valor creciente: I, V, X, L, C, D, M, etc., que se agrupaban de derecha a izquierda, sum\'e1\loch\f4 \hich\f4 ndose o rest\'e1\loch\f4 ndose entre 
\hich\af4\dbch\af31505\loch\f4 \hich\f4 s\'ed\loch\f4 \hich\f4 , seg\'fa\loch\f4 n siguieran a no el orden creciente: 
\par \hich\af4\dbch\af31505\loch\f4 CXVII = cien + diez + cinco + uno + uno
\par \hich\af4\dbch\af31505\loch\f4 MCMV = mil + (mil - cien) + cinco
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Esta codificaci\'f3\loch\f4 \hich\f4 n requer\'ed\loch\f4 \hich\f4 a nuevos s\'ed\loch\f4 \hich\f4 mbolos cuando se agotaban los de mayor valor, a la par que los c\'e1\loch\f4 lculos por su complejidad convenio
\hich\af4\dbch\af31505\loch\f4 \hich\f4  realizarlos con \'e1\loch\f4 \hich\f4 bacos. Fueron los pueblos orientales y americanos (mayas) los que desarrollaron los sistemas posicionales, basados en un conjunto limitado y constante de s\'ed\loch\f4 
\hich\f4 mbolos, entre lo cuales se encontraba el \'93\loch\f4 \hich\f4 cero\'94\loch\f4 , para indicar la ausencia de elem\hich\af4\dbch\af31505\loch\f4 e\hich\af4\dbch\af31505\loch\f4 \hich\f4 ntos. Miles de a\'f1\loch\f4 \hich\f4 os antes, el \'e1
\loch\f4 \hich\f4 baco, construido en la tierra o con madera fue el antecesor natural de estos sistemas, siendo que la ausencia de objetos en una posici\'f3\loch\f4 n o varilla implicaba de hecho el cero.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 En estos sistemas, **cada s\'ed\loch\f4 mbolo**, ademas del n\loch\af4\dbch\af31505\hich\f4 \'fa\loch\f4 \hich\f4 
mero de elementos de un tipo que representa considerado aisladamente, **tiene un significado o peso distinto, seg\'fa\loch\f4 \hich\f4 n la posici\'f3\loch\f4 n que ocupa el grupo** de caracteres del que forma parte.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 De esta manera es posible representar sistem\'e1\loch\f4 \hich\f4 ticamente cualquier n\'fa\loch\f4 mer\hich\af4\dbch\af31505\loch\f4 \hich\f4 o, empleando en forma combinada un conjunto limitado de caracteres simb
\'f3\loch\f4 licos.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Los caracteres se denominan \'93\loch\f4 \hich\f4 d\'ed\loch\f4 \hich\f4 gitos\'94\loch\f4 \hich\f4 , y constituyen piezas de informaci\'f3\loch\f4 \hich\f4 n digital (secci\'f3\loch\f4 n 1.10)  
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Relacionado con los diez dedos, el sistema posiciones decimal, tambi\'e9\hich\af4\dbch\af31505\loch\f4 \hich\f4 n denominado de \'93\loch\f4 \hich\f4 base o ra\'ed\loch\f4 \hich\f4 z diez\'94\loch\f4 \hich\f4 
 por utilizar diez s\'ed\loch\f4 \hich\f4 mbolos (que forman la sucesi\'f3\loch\f4 \hich\f4 n mon\'f3\loch\f4 \hich\f4 tona creciente 0, 1, 2, 3, 4, 5, 6, 7, 8, 9) permite representar cualquier n\'fa\loch\f4 \hich\f4 mero de elementos cocinando dichos s
\'ed\loch\f4 mbolos.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Este sistema servir\'e1\loch\f4  para comprender concep\hich\af4\dbch\af31505\loch\f4 \hich\f4 tualmente en que consiste y cualquier es la estructura de cualquier sistema num\'e9\loch\f4 rico posicional.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Si bien en la pr\'e1\loch\f4 \hich\f4 ctica aprendemos mec\'e1\loch\f4 \hich\f4 nica e intuitivamente. sin pensar, la magnitud de un n\'fa\loch\f4 mero decimal con solo visualizarlo, en realidad la capacidad de e
\hich\af4\dbch\af31505\loch\f4 \hich\f4 lementos que el n\'fa\loch\f4 \hich\f4 mero simboliza se determina sumando los productos que se obtienen de multiplicar el valor de una unidad que representa cada d\'ed\loch\f4 \hich\f4 gito por el \'93\loch\f4 
\hich\f4 peso\'94\loch\f4 \hich\f4  (valor) de la  posici\'f3\loch\f4 n que ocupa (unidades, decenas, etc): 
\par 
\par \hich\af4\dbch\af31505\loch\f4 9323 = 9 x 1000 + 3X100 + 2x10 \hich\af4\dbch\af31505\loch\f4 + 3x1 siendo: 10 = 1x10 = 101; 100 = 10X10 = 102; 1000 = 100x10 = 103
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Resulta que **el peso de cada posici\'f3\loch\f4 \hich\f4 n es el del anterior multiplicado por la base** (diez, o sea el n\'fa\loch\f4 \hich\f4 mero de s\'ed\loch\f4 \hich\f4 mbolos del sistema), resultando as\'ed
\loch\f4  los pesos potencias crecientes de la\hich\af4\dbch\af31505\loch\f4 \hich\f4  base. Esto es com\'fa\loch\f4 \hich\f4 n a todos los  sistemas posicionales. En caso de necesitarse representar n\'fa\loch\f4 \hich\f4 meros m\'e1\loch\f4 \hich\f4 
s grandes se usan siempre los mismos diez s\'ed\loch\f4 \hich\f4 mbolos, y solo es necesario agregar nuevas posiciones a la izquierda. Un sistema num\'e9\loch\f4 rico es una forma de fra\hich\af4\dbch\af31505\loch\f4 c\hich\af4\dbch\af31505\loch\f4 
\hich\f4 cionar una totalidad en posiciones, cuyos tama\'f1\loch\f4 \hich\f4 os, apartar del valor uno, se van escalonando -a medida que se requieren nuevos tama\'f1\loch\f4 \hich\f4 os - de forma tal que cada nuevo tama\'f1\loch\f4 \hich\f4 
o que se necesite es el anterior multiplicado por la cantidad de s\'ed\loch\f4 mbolos de la base.\hich\af4\dbch\af31505\loch\f4  \hich\af4\dbch\af31505\loch\f4 \hich\f4 El n\'fa\loch\f4 \hich\f4 mero m\'e1\loch\f4 \hich\f4 ximo de posiciones de cada tama
\'f1\loch\f4 \hich\f4 o lo determina el s\'ed\loch\f4 \hich\f4 mbolo de mayor valor de la base en cuesti\'f3\loch\f4 n.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Cuando leemos 109 persona ( 109 = 1x100 + 0x10 + 9x1) en relaci\'f3\loch\f4 n a la totalidad de dichas personas, las mismas de hecho han sido divididas en for\hich\af4\dbch\af31505\loch\f4 \hich\f4 
ma virtual, de modo de conformar de manera \'fa\loch\f4 nica:
\par \hich\af4\dbch\af31505\loch\f4 - un solo grupo de 100, (pudiendo existir hasta 9 grupos posibles de 100),
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 . con las restantes (109 - 100 = 9) no se puede formar ning\'fa\loch\f4 \hich\f4 n grupo de 10, y s\'ed\loch\f4  9 grupos de una persona.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Tambi\'e9\loch\f4 n puede pensarse en \hich\af4\dbch\af31505\loch\f4 \hich\f4 relaci\'f3\loch\f4 \hich\f4 n los el n\'fa\loch\f4 \hich\f4 
mero 109, que en una balanza (Figura A1.1) se debe pensar un objeto de peso supuestamente desconocido, pero que a los fines did\'e1\loch\f4 cticos de simular su pesada debemos partir de que dicho peso es conocido (109 grs.).
\par 
\par }\pard \ltrpar\ql \li0\ri0\sl280\slmult0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\cf1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 ![imagen1](/Figura A1-1.\hich\af4\dbch\af31505\loch\f4 png)
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Los juegos de pesas a utilizar en base de 10 ser\'e1\loch\f4 \hich\f4 n subconjuntos de 9 m\'fa\loch\f4 ltiples de diez:
\par 
\par \hich\af4\dbch\af31505\loch\f4 * 9 pesas de 1 gramo
\par \hich\af4\dbch\af31505\loch\f4 * 9 pesas de 10 gramo
\par \hich\af4\dbch\af31505\loch\f4 * 9 pesas de 100 gramo
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * 9 pesas de 1000 gramo\'85\loch\f4 \hich\f4  y as\'ed\loch\f4  de seguido;
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 o sea que podemos tener m\'e1\hich\af4\dbch\af31505\loch\f4 \hich\f4 s subconjuntos de 9 pesas que sean m\'fa\loch\f4 \hich\f4 ltiplos de diez (te\'f3\loch\f4 \hich\f4 ricamente infinitos), seg\'fa\loch\f4 
n sea la magnitud de peso de los objetos que se quiere pesar.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Para pesar dichos objetos se usar\'ed\loch\f4 a primero una pesa de 100 grs. (la de mayor peso posible para empezar a equi\hich\af4\dbch\af31505\loch\f4 \hich\f4 librar, sed que con dos pesas de ese tipo se exceder
\'ed\loch\f4 \hich\f4 an los 109 grs. a pesar: 100 + 100 = 200 > 109). Luego si se prueba con una pesa de 10 grs. tambi\'e9\loch\f4 \hich\f4 n se exceder\'e1\loch\f4 
 el peso a ponderar: 100 + 10 = 110 > 109. Finalmente agregando 9 pesas de 1 gr. se equilib\hich\af4\dbch\af31505\loch\f4 r\hich\af4\dbch\af31505\loch\f4 \hich\f4 
a la balanza. En definitiva se usaron una pesa de 100 gas, 0 pesas de 10 gas y 9 pesas de 1 gr. con lo cual el n\'fa\loch\f4 mero 109 indica el peso del objeto en base de diez. O sea:
\par 
\par \hich\af4\dbch\af31505\loch\f4 100 10 1
\par \hich\af4\dbch\af31505\loch\f4 1       0 9 = 1x100 + 0x10 + 1x9
\par 
\par \hich\af4\dbch\af31505\loch\f4 Es importante observar que tanto con las\hich\af4\dbch\af31505\loch\f4 \hich\f4  personas como con las balanzas, se empieza siempre respectivamente por los grupos o pesas m\'e1\loch\f4 \hich\f4 s grandes (de valor\'85
\loch\f4 \hich\f4  1000, 1000, \'85\loch\f4 \hich\f4 ) que se puedan formar o emplear. De este modo se asegura que la representaci\'f3\loch\f4 \hich\f4 n simb\'f3\loch\f4 \hich\f4 lica es \'fa\loch\f4 nica.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ### \'bf\loch\f4 \hich\f4 CUAL\'c9\loch\f4 S SON LAS CARACTER\hich\af4\dbch\af31505\loch\f4 \hich\f4 ISTICAS DE LOS SISTEMAS NUM\'c9\loch\f4 RICOS POSICIONALES?
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Podemos sistematizar como sigue las caracter\'ed\loch\f4 \hich\f4 sticas del sistema decimal, que tambi\'e9\loch\f4 \hich\f4 n, como se tratar\'e1\loch\f4 \hich\f4 , son comunes a todos los sistemas num\'e9\loch\f4 
\hich\f4 ricos posiciones, cualquiera sea su base (definida por el n\'fa\loch\f4 mero de\hich\af4\dbch\af31505\loch\f4 \hich\f4  s\'ed\loch\f4 \hich\f4 mbolos empleados para formar los n\'fa\loch\f4 meros)
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * Consta de un n\'fa\loch\f4 \hich\f4 mero finito de s\'ed\loch\f4 \hich\f4 mbolos individuales distintos que constituyen la \'93\loch\f4 \hich\f4 base o ra\'ed\loch\f4 \hich\f4 z\'94\loch\f4 
 del sistema ( diez en el sistema decimal, dos en el binario, etc.).
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * Cada s\'ed\loch\f4 \hich\f4 mbolo aislado representa un n\'fa\loch\f4 mero e\hich\af4\dbch\af31505\loch\f4 \hich\f4 spec\'ed\loch\f4 fico de unidades.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * Existe un s\'ed\loch\f4 mbolo (cero) para indicar la ausencia de elementos a representar.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * Los s\'ed\loch\f4 \hich\f4 mbolos que pueden rodearse en forma mon\'f3\loch\f4 tona creciente.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * Formando parte de un n\'fa\loch\f4 \hich\f4 mero compuesto por varios s\'ed\loch\f4 \hich\f4 mbolos, un mismo s\'ed\loch\f4 mbolo tiene un si\hich\af4\dbch\af31505\loch\f4 \hich\f4 gnificado o \'93\loch\f4 
\hich\f4 peso\'94\loch\f4 \hich\f4  distinto seg\'fa\loch\f4 \hich\f4 n su posici\'f3\loch\f4 n relativa en el conjunto.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * La posici\'f3\loch\f4 \hich\f4 n extrema derecha corresponde a unidades (peso uno); a partir de ella, cada posici\'f3\loch\f4 \hich\f4 n tiene el peso de la que est\'e1\loch\f4 
 a su derecha multiplicando por la base, resultando siempre \hich\af4\dbch\af31505\loch\f4 \hich\f4 que el peso de cada posici\'f3\loch\f4 \hich\f4 n es una potencia de la base. Esta en todas las bases se simboliza 10 (\'93\loch\f4 \hich\f4 uno cero\'94
\loch\f4 ).
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ## A1.2 SISTEMAS NUM\'c9\loch\f4 RICOS OCTAL, BINARIO Y HEXADECIMAL
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ### \'bf\loch\f4 \hich\f4 Qu\'e9\loch\f4 \hich\f4  s\'ed\loch\f4 \hich\f4 mbolos se emplean en otras bases num\'e9\loch\f4 \hich\f4 ricas y c\'f3\loch\f4 \hich\f4 mo se representan n\'fa\loch\f4 meros en 
\hich\af4\dbch\af31505\loch\f4 ellas?
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 A los fines de que resulte f\'e1\loch\f4 \hich\f4 cil simbolizar n\'fa\loch\f4 \hich\f4 meros en otros sistemas num\'e9\loch\f4 \hich\f4 
ricos, los sistemas 0 y 1 existen en todos los sistemas con igual significado que en el decimal. Si otras sistemas usan algunos o todos los s\'ed\hich\af4\dbch\af31505\loch\f4 \hich\f4 
mbolos decimales restantes del 2 al 9, se ha acordado que su  significado es el mismo que en decimal. As\'ed\loch\f4  7 representa siete unidades, ya sea en decimal, octal o hexadecimal.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 El **sistema hexadecimal** tendr\'e1\loch\f4 \hich\f4  diecis\'e9\loch\f4 \hich\f4 is s\'ed\loch\f4 mbolos distintos que construyen la\hich\af4\dbch\af31505\loch\f4 \hich\f4 
 base. Del 0 al 9 coinciden en el significado con los correspondientes decimales; para los seis restantes se crearon los s\'ed\loch\f4 \hich\f4 
mbolos de la A hasta la F, como aparecen en la figura A1.1 en correspondencia con sus equivalentes decimales y con los n\'fa\loch\f4 meros de ot\hich\af4\dbch\af31505\loch\f4 r\hich\af4\dbch\af31505\loch\f4 os sistemas.
\par 
\par }\pard \ltrpar\ql \li0\ri0\sl280\slmult0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\cf1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 ![imagen1](/Figura A1-2.png)
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par 
\par \hich\af4\dbch\af31505\loch\f4 #### Sistema en base de ocho u octal
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 En base ocho los ocho s\'ed\loch\f4 \hich\f4 mbolos van del 0 al 7 (fig. A1.2), con los cuales se puede formar cualquier n\'fa\loch\f4 mero. Con los mismos supuestos que planteamos para la pesada realizada 
\hich\af4\dbch\af31505\loch\f4 \hich\f4 en la relaci\'f3\loch\f4 \hich\f4 n co la fig. A1.1, pesaremos (fig. A1.3) el mismo objeto cuyo peso en el optar supondremos desconocido, siendo que la base de diez pesa 109 grs. Veamos cu\'e1\loch\f4 \hich\f4 
les son las pesas en la base ocho. Si en base diez cada pesa en relaci\'f3\loch\f4 n con la del tam\hich\af4\dbch\af31505\loch\f4 a\loch\af4\dbch\af31505\hich\f4 \'f1\loch\f4 \hich\f4 o anterior era diez veces m\'e1\loch\f4 \hich\f4 
s pesada, en optar lo ser\'e1\loch\f4 \hich\f4  ocho veces. Juntando ocho pesas de un valor se construye una pesa del tama\'f1\loch\f4 \hich\f4 o siguiente. Si para fines did\'e1\loch\f4 \hich\f4 
cticos simbolizamos en base de diez el peso de cada tipo de pesa octal, por lo que se tendr\'ed\loch\f4 a\hich\af4\dbch\af31505\loch\f4  \hich\af4\dbch\af31505\loch\f4 \hich\f4 
la serie de valores: 1gr.; 1gr. x 8d = 8d grs.; 8d grs. x 8d = 64d grs.; 64 d gas x 8d = 512d gas, etc\'85\loch\f4 \hich\f4 El s\'ed\loch\f4 \hich\f4 mbolo \'93\loch\f4 \hich\f4 d\'94\loch\f4 \hich\f4  incida que se trata de base diez. el s\'ed\loch\f4 
\hich\f4 mbolo para representar el 1 es el mismo en ambas bases. De cada uno de los dichos tama\'f1\loch\f4 os existe u\hich\af4\dbch\af31505\loch\f4 n\hich\af4\dbch\af31505\loch\f4 \hich\f4  total de 7 pesas octales (en base diez eran 9), siendo 7 el s
\'ed\loch\f4 mbolo octal de mayor valor:
\par 
\par \hich\af4\dbch\af31505\loch\f4 * 7 pesas de 1gr.
\par \hich\af4\dbch\af31505\loch\f4 * 7 pesas ocho veces mayores que la de 1gr. (8d grs.)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * 7 pesas diecis\'e9\loch\f4 is veces mayores que la de 1 gr. (16d gramos) y ocho veces mayor que el tam\hich\af4\dbch\af31505\loch\f4 \hich\f4 a\'f1\loch\f4 o anterior.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * 7 pesas sesenta y cuatro veces mayores que la de 1 gr. (64d grs.) y ocho veces mayor que el tama\'f1\loch\f4 o anterior.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 y as\'ed\loch\f4 \hich\f4  de seguido, \'f3\loch\f4 \hich\f4 sea que podemos tener m\'e1\loch\f4 \hich\f4 s subconjuntos de 7 pesas que sean m\'fa\loch\f4 \hich\f4 ltiplo de ocho (te\'f3\loch\f4 \hich\f4 
rica-mente infinitos), seg\'fa\loch\f4 n se\hich\af4\dbch\af31505\loch\f4 a la magnitud del peso de los objetos que se quieren pesar.
\par 
\par }\pard \ltrpar\ql \li0\ri0\sl280\slmult0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\cf1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 ![imagen1](/Figura A1-3.png)}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 
\f4\fs24\kerning1\insrsid10114890 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par \hich\af4\dbch\af31505\loch\f4 Volvemos a pesar el objeto que en base diez pesaba 109 grs. cuando se pesa un objeto en general se desconoce su peso, el cual hay que determinar. Para ello se requie\hich\af4\dbch\af31505\loch\f4 \hich\f4 
re ir probando poniendo y sacando pesas (optares en este caso), hasta que con las pesas adecuada la balanza alcance el equilibrio. La selecci\'f3\loch\f4 \hich\f4 n de las pesas adecuadas la situaremos haciendo c\'e1\loch\f4 \hich\f4 
lculos simples en base diez, como se hizo en relaci\'f3\loch\f4 n a la figu\hich\af4\dbch\af31505\loch\f4 r\hich\af4\dbch\af31505\loch\f4 \hich\f4 
a A1.1. Suponiendo (fig. A1.3) que se empieza adecuadamente a equilibrar la balanza con una pesa sesenta y cuatro veces mayor que la de 1gr. en el platillo derecho. Pensando en la base diez se habr\'e1\loch\f4 \hich\f4 
n equilibrado 64d gas, por lo que faltar\'e1\loch\f4  equilibrar 109 -\hich\af4\dbch\af31505\loch\f4  64 = 45d grs.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Si se coloca otra pesa del mismo tama\'f1\loch\f4 \hich\f4 o que el anterior se tendr\'ed\loch\f4 \hich\f4 a: 64d +64d = 128d > 109d, y el peso del platillo derecho superar\'ed\loch\f4 \hich\f4 
a al del izquierdo, por lo que no puede colocarse m\'e1\loch\f4 \hich\f4 s que una pesa de dicho tama\'f1\loch\f4 o.
\par 
\par 
\par \loch\af4\dbch\af31505\hich\f4 \emdash \emdash \emdash \loch\f4 \hich\f4 P\'e1\loch\f4 g 136 - 138
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Probando ahora con pesas ocho veces mayores que la de 1 gr. si se colocan en el platillo derecho 5 pesas de 8dn lo Cual suma 40d), de los 45d que faltaba balancear, ahora restar\'e1\loch\f4 
n balancear 45d - 40d = 5 grs., lo cual se reata colocando 5 pesas de 1 gr.
\par \hich\af4\dbch\af31505\loch\f4 *\hich\af4\dbch\af31505\loch\f4 \hich\f4 En definitiva, en el platillo derecho se habr\'ed\loch\f4 \hich\f4 an colocado: 1 pesa sesenta y cuatro veces m\'e1\loch\f4 \hich\f4 s pesada que 1 gr. ; 5 pesas ocho veces m\'e1
\loch\f4 \hich\f4 s pesadas que las de 1 gr. y 5 pesas de 1 gr. Esto quedar\'cc\loch\f4 a simbolizado en octal (0) como 155
\par \hich\af4\dbch\af31505\loch\f4 *100 10 1 ]d 64 8 1 ]d
\par \hich\af4\dbch\af31505\loch\f4 *Enton\hich\af4\dbch\af31505\loch\f4 \hich\f4 ces 1 0 9d =1 5 5 0 (sobre los s\'ed\loch\f4 mbolos en base diez y base ocho se indican sus pesos en decimal)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *(La igualdad anterior tambi\'e9\loch\f4 n implica que si en un plato de la balanza colocamos las pesas en base diez correspondientes al 109, y en el otro las pesas octal\hich\af4\dbch\af31505\loch\f4 \hich\f4 
es correspondientes al 155, obviamente se equilibrar\'e1\loch\f4 n)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *El mismo objeto que en la fig. A 1.1 fue fraccionado artificialmente en porciones indicadas como 109d; en la fig A1 .3 lo hemos fraccionado tambi\'e9\loch\f4 n en forma virtual en porciones para simbolizar su pe
\hich\af4\dbch\af31505\loch\f4 \hich\f4 so en octal. Si a los fines de comparar lo efectuado en ambas casos expresamos el valor de las pesas octales en base diez, resulta que 155\'f8\loch\f4 \hich\f4  implica que se fraccione dicho objeto en una porci\'f3
\loch\f4 n de 64 grs, en 5 porciones de 8 grs. y en 5 porciones de 1 gr.
\par \hich\af4\dbch\af31505\loch\f4 *\hich\af4\dbch\af31505\loch\f4 \hich\f4 Asimismo, si pensamos en el conjunto de personas que en base diez fue dividido conforme indican los s\'ed\loch\f4 \hich\f4 
mbolos 109, dicha totalidad en base ocho fue dividida (pensando el tama\'f1\loch\f4 o de los grupos en base diez), en un grupo de 64, 5 grupos de 8, y 5 grupos de un\hich\af4\dbch\af31505\loch\f4 a\hich\af4\dbch\af31505\loch\f4 
 persona, siendo que pueden existir hasta 7 grupos de cada tipo
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Nuevamente se verifica que un sistema num\'e9\loch\f4 \hich\f4 rico es una forma de fraccionar una totalidad en porciones, cuyos tama\'f1\loch\f4 
os, a partir del valor uno, se van escalonando -a medida que se necesitan nuev\hich\af4\dbch\af31505\loch\f4 \hich\f4 os tama\'f1\loch\f4 \hich\f4 os- de forma tal que cada nuevo tama\'f1\loch\f4 \hich\f4 
o que se necesite es el anterior multiplicado por la cantidad de s\'ed\loch\f4 mbolos de la base. El n}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \loch\af79\dbch\af31505\hich\f79 \'ff\loch\f79 \hich\f79 mero m\'e1\loch\f79 
ximo de porciones de cada tama}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \loch\af4\dbch\af31505\hich\f4 \'f1\loch\f4 \hich\f4 o lo determina el s\'ed\loch\f4 \hich\f4 mbolo de mayor valor de la base en cuesti\'f3\loch\f4 n.

\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *\'f8\loch\f4 \hich\f4 C\'f3\loch\f4 mo se simboli\hich\af4\dbch\af31505\loch\f4 zan los pesos en octal sin necesidad de estimarlos en base diez?
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Hasta ac\'e1\loch\f4 \hich\f4  nos hemos centrado en el objetivo de entender conceptualmente que es un sistema num\'e9\loch\f4 \hich\f4 rico posicional, para lo cual por razones did\'e1\loch\f4 
cticas hemos valorado los pesos en base diez, medi}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 ante los cuales simbolizamos el peso de un objeto o de un n\'ff\loch\f79 \hich\f79 
mero de elementos usando los s\'ed\loch\f79 \hich\f79 mbolos en base ocho. Si bien se puso \'c9\loch\f79 \hich\f79 nfasis en que la balanza usaba pesas octales, y que el peso simbolizado 155 se pod\'ed\loch\f79 a lograr -sin conocer que es 109d- equilibr
\hich\af79\dbch\af31505\loch\f79 a}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 \hich\f4 
ndo la balanza con pesas octales, de hecho los cirlculos que hemos realizado en base diez para llegar al 155 implican un pasaje de base diez a octal m\'e9\loch\f4 todo que seguiremos usando.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *A fin de ratificar que cada sistema de numeraci\'f3\loch\f4 n no surge del sistema deci\hich\af4\dbch\af31505\loch\f4 
mal, sino que es independiente, como lo sugiere claramente la posibilidad de pesar usando pesas octales, expresaremos en octal el valor de las pesas o pesos de este sistema. Simplemente (fig. Al.4.a) si ponemos en el plato izquierdo de la balanza una pesa
\hich\af4\dbch\af31505\loch\f4  \hich\af4\dbch\af31505\loch\f4 \hich\f4 
ocho veces mayor que 1 gr. (8 grs. en base diez) para equilibrarlo hace falta una sola pesa ocho veces mayor que 1 gr, y ninguna (cero) pesa de 1 gr., o sea que esta pesa o peso en octal se simboliza 10 (l\'e9\loch\f4 \hich\f4 ase uno-cero, y no \'93
\loch\f4 \hich\f4 diez\'94\loch\f4 ).
\par \hich\af4\dbch\af31505\loch\f4                       \hich\af4\dbch\af31505\loch\f4                                                     8 1 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Conforme con esto, en la fig. Al.2 luego del s\'ed\loch\f4 \hich\f4 mbolo mayor 7 sigue el 10 (1 0\'db\loch\f4 \hich\f4  = 8d), as\'cc\loch\f4 \hich\f4  como en base diez despu\'e9\loch\f4 \hich\f4 
s del 9 sigue el 10. Esto es general: en cada base al s\'ed\loch\f4 \hich\f4 mbolo m\'e1\loch\f4 s alto en valor le s\hich\af4\dbch\af31505\loch\f4 \hich\f4 
igue en valor el 10. Del mismo modo (fig. A1.4.b), si en el plato izquierdo se coloca una pesa sesenta y cuatro veces mayor que 1 gr se equilibra con una sola de ese tama\'f1\loch\f4 \hich\f4 o y ninguna de los tama\'f1\loch\f4 \hich\f4 
os menores, por lo que en octal este peso se simboliza lOO\'db\loch\f4  \hich\af4\dbch\af31505\loch\f4 (\hich\af4\dbch\af31505\loch\f4 \hich\f4 l\'c8\loch\f4 \hich\f4 ase uno-cero-cero, y no \'ec\loch\f4 \hich\f4 cien\'ee\loch\f4 \hich\f4 
). Igualmente una pesa 256 veces mayor que 1 gr se equilibra con solo una de ese tama\'d2\loch\f4 \hich\f4 o, y ninguna de los tama\'f1\loch\f4 os subsiguientes, por lo que en octal este peso es IOOO0, etc
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *O sea 100% en octal: 10010 1 ]\'c8
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *15 5\'db\loch\f4 - 1x100 + 5x\hich\af4\dbch\af31505\loch\f4 \hich\f4 10 + 5xl]\'db
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *\'85\loch\f4 \hich\f4 esta cuenta (que indica una pesa de 100, m\'e1\loch\f4 \hich\f4 s 5 de 10, m\'e1\loch\f4 \hich\f4 s una de 1) realizada en octal dar\'cc\loch\f4 \hich\f4 a, obviamente, 155\'db.\tab \'df
\loch\f4  j
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *La apreciaci\'f3\loch\f4 \hich\f4 n de los pesos de 155 0 en base diez era 1 5 5 \'db\loch\f4  ' =[1x64 + 5x8 + 5xl]d = 109d ; esto es, pensado en base diez se\hich\af4\dbch\af31505\loch\f4 \hich\f4 
 usaron una pesa de 64 m\'e1\loch\f4 \hich\f4 s 5 de 8, m\'e1\loch\f4 s 5 de 1, suma que da 109d.
\par 
\par \hich\af4\dbch\af31505\loch\f4 ![imagen1](/Figura A1-4.png)
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Al apreciar los pesos en base diez en esencia se est\'e1\loch\f4 \hich\f4  pasando de octal a base diez, siendo que el significado de los s\'ed\hich\af4\dbch\af31505\loch\f4 \hich\f4 
mbolos 1 y 5 es el mismo en ambas bases. Este m\'e9\loch\f4 \hich\f4 todo ser\'b7\loch\f4  el usado para pasar de cualquier base a decimal.
\par 
\par \hich\af4\dbch\af31505\loch\f4 #Sistema en base dos o binario
\par 
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 En base dos los s\'ed\loch\f79 \hich\f79 mbolos con los cuales se puede formar cualquier n\'ff\loch\f79 
mero son 0 y 1 (figura A1.2),Con los mismos supu}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 \hich\f4 estos que planteamos para la pesada realizada en relaci\'f3\loch\f4 \hich\f4 
n con la fig. A 1.1, pesaremos (fig. A 1.5) e\'cc\loch\f4 \hich\f4  mismo objeto cuyo peso en binario se quiere determinar, siendo que en base diez pesa 109 grs. Veamos cu\'e1\loch\f4 les son las pesas en base dos. Si cada pesa en b
\hich\af4\dbch\af31505\loch\f4 a\hich\af4\dbch\af31505\loch\f4 \hich\f4 se diez en relaci\'f3\loch\f4 \hich\f4 n con la del tama\'f1\loch\f4 \hich\f4 o anterior era diez veces m\'b7\loch\f4 \hich\f4 s pesada, en binario lo ser\'b7\loch\f4 \hich\f4 
 dos veces: juntando dos pesas de un valor se construye una pesa del tama\'f1\loch\f4 \hich\f4 o siguiente. Si para fines did\'e1\loch\f4 cticos simbolizamos en base diez el peso de cada tipo de p\hich\af4\dbch\af31505\loch\f4 e
\hich\af4\dbch\af31505\loch\f4 \hich\f4 sa binario, se tendr\'ed\loch\f4 \hich\f4 a la serie de valores: 1 gr; 2d grs: 4d grs; 8d grs; 32d grs; 64d grs; 128d grs; 256d grs; 512dgrs., etc... El s\'ed\loch\f4 \hich\f4 mbolo \'ec\loch\f4 \hich\f4 d\'ee
\loch\f4 \hich\f4  indica que se trata de base diez. El s\'ed\loch\f4 mbolo para representar 1 gr. es el mismo en ambas bases.
\par \hich\af4\dbch\af31505\loch\f4 De cada uno de d\hich\af4\dbch\af31505\loch\f4 \hich\f4 ichos tama\'f1\loch\f4 \hich\f4 os existe una sola pesa (en base diez eran 9), siendo 1 el mayor s\'ed\loch\f4 mbolo binario:
\par \hich\af4\dbch\af31505\loch\f4 *1 pesa de 1 gramo
\par \hich\af4\dbch\af31505\loch\f4 *1 pesa dos veces mayor que la de 1 gr. (2d)
\par \hich\af4\dbch\af31505\loch\f4 *1 pesa cuatro veces mayor que la de 1 gr. (4d)
\par \hich\af4\dbch\af31505\loch\f4 *1 pesa ocho veces mayor que la de 1 gr. (8d
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Y as\'cc}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79  de seguido, o sea que podemos tener m\'e1\loch\f79 \hich\f79 s pesas, cada una m\'fa
\loch\f79 \hich\f79 ltiplo de dos (te\'f3\loch\f79 \hich\f79 ricamente infinitas), seg\'ff\loch\f79 n sea la magnitud del peso de los objetos que se quiere pesar.\tab .\tab \tab \tab 
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 *La pesa de cada valor se usa (1), o no se usa (0)
\par 
\par \hich\af4\dbch\af31505\loch\f4 ![imagen1](/Figura A1-5.png)
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 *P\hich\af4\dbch\af31505\loch\f4 \hich\f4 esaremos otra vez el objeto que en decimal pesaba 109 grs. La selecci\'f3\loch\f4 \hich\f4 
n de las pesas adecuadas la simularemos haciendo cilrculos simples en base diez, como se hizo en relaci\'f3\loch\f4 n con las figuras A 1.1 y Al.3. Suponiendo (fig. Al.5) que se empieza adecuadamen\hich\af4\dbch\af31505\loch\f4 t
\hich\af4\dbch\af31505\loch\f4 \hich\f4 e a equilibrar la balanza colocando en el platillo derecho la pesa 64 veces m\'e1\loch\f4 s 1\tab \hich\f4 1 u i \'b6\loch\f4 \hich\f4  i u i pesada que la de 1 gr, pensando en base diez se habr\'ed\'e1\loch\f4 
n equilibrado
\par \hich\af4\dbch\af31505\loch\f4 *Figura Al .5\tab \hich\f4 64d grs, por lo que faltar\'b7\loch\f4  equilibrar 109-64 = 45d grs. Figura Al .5\tab 64d grs,\hich\af4\dbch\af31505\loch\f4 \hich\f4  por lo que faltar\'b7\loch\f4  equilibrar 109-64 = 45d grs.

\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Probando equilibrar agregando en el platillo derecho la pesa de tama\'f1\loch\f4 \hich\f4 o menor siguiente, 32 veces mayor que la de lgr., de los 45d que faltaba balancear, ahora restar\'e1\loch\f4 
n balancear 45d - 32d = 13 grs. Si se pr\hich\af4\dbch\af31505\loch\f4 \hich\f4 ueba colocar la pesa 16 veces mayor que la de lgr, sumando en base diez resultar\'cc\loch\f4 \hich\f4 
a (64 + 32 + 16)d = 112d > 109d, con lo cual el peso del platillo derecho superar\'cc\loch\f4 a al del izquierdo, por lo que no puede colocarse la pesa 16 veces mayor que la de 1 gr. Est\hich\af4\dbch\af31505\loch\f4 o\hich\af4\dbch\af31505\loch\f4 
\hich\f4  se simboliza con un cero en relaci\'f3\loch\f4 
n con esa pesa 16 veces mayor.. Colocando la pesa 8 veces mayor que la de 1 gr. resultan balanceados (64 + 32 + 8)d = 104d grs., faltando ahora balancear (13 - 8)d= 5d grs. Agregando la pesa siguiente, 4 veces mayor que\hich\af4\dbch\af31505\loch\f4  
\hich\af4\dbch\af31505\loch\f4 \hich\f4 1 gr. faltar\'cc\loch\f4 \hich\f4 a balancear (5 -4)d = Id gr., por lo que no se puede colocar (cero) la pesa 2 veces mayor que la de 1 gr., y s\'cc\loch\f4  debe agregarse la pesa de 1 gr.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *En definitiva, en el platillo derecho se habr\'ed\loch\f4 \hich\f4 an colocado: 1 pesa binaria 64 veces m\'e1\loch\f4 s pesada que \hich\af4\dbch\af31505\loch\f4 \hich\f4 la de 1 gr.; 1 pesa binaria 32 veces m\'e1
\loch\f4 \hich\f4 s pesada que la de 1 gr.; 0 pesa binaria 16 veces m\'e1\loch\f4 \hich\f4 s pesada que la de 1 gr.; 1 pesa binaria 8 veces m\'e1\loch\f4 \hich\f4 s pesada que la de 1 gr.; 1 pesa binaria 4 veces m\'e1\loch\f4 \hich\f4 
s pesada que la de 1 gr.; 0 pesa binaria 2 veces m\'e1\loch\f4 s pesada qu\hich\af4\dbch\af31505\loch\f4 e\hich\af4\dbch\af31505\loch\f4 \hich\f4  la de 1 gr.; 1 pesa binaria de 1 gr. Esto quedar\'cc\loch\f4 a simbolizado binario (b) como 1101101b
\par \hich\af4\dbch\af31505\loch\f4 *100 10 1 ]d 64 32 16 8 4 2 1 ]d
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Entonces 10 9d= 1101101b (sobre los s\'ed\loch\f4 mbolos en ambas bases se indican sus pesos en decimal)
\par \hich\af4\dbch\af31505\loch\f4 *El mismo objeto que en la fig. A 1.1 f\hich\af4\dbch\af31505\loch\f4 \hich\f4 ue fraccionado artificialmente en porciones indicadas como 109d; en la fig. Al.5 lo hemos fraccionado tambi\'e9\loch\f4 
n en forma virtual en las porciones indicadas para simbolizar su peso en binario. Asimismo, si pensamos en el conjunto de personas que en base diez\hich\af4\dbch\af31505\loch\f4  \hich\af4\dbch\af31505\loch\f4 \hich\f4 fue dividido conforme indican los s
\'ed\loch\f4 \hich\f4 mbolos 109, dicha totalidad en base dos fue dividida (pensando el tama\'f1\loch\f4 \hich\f4 o de los grupos en base diez), en un grupo de 64, un grupo de 32; entre los restantes no se pudo formar ning\'fa\loch\f4 \hich\f4 
n grupo de 16, s\'cc\loch\f4  un grupo de 8 y otro \hich\af4\dbch\af31505\loch\f4 d\hich\af4\dbch\af31505\loch\f4 \hich\f4 e 4; entre los restantes no se pudo formar ning\'fa\loch\f4 n grupo de 2, y si un grupo de una persona.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Nuevamente se verifica que un sistema num\'e9\loch\f4 \hich\f4 rico es una forma de fraccionar una totalidad en porciones, cuyos tama\'f1\loch\f4 os, a partir del valor uno, se van escalonando
\hich\af4\dbch\af31505\loch\f4 \hich\f4  -a medida que se necesitan nuevos tama\'f1\loch\f4 \hich\f4 os- de forma tal que cada nuevo tama\'f1\loch\f4 \hich\f4 o que se necesite es el anterior multiplicado por la cantidad de s\'ed\loch\f4 
mbolos de la base.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *\'f8\loch\f4 \hich\f4 Qu\'c8\loch\f4  son los bits y bytes?
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *El numero binario 1101101 consta de 7 d\'ed\loch\f4 \hich\f4 gitos binarios. En ingl\'e9\hich\af4\dbch\af31505\loch\f4 \hich\f4 s ser\'ed\loch\f4 an 7 binary digits, o sea 7 bits.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *O sea que un bit es un d\'ed\loch\f4 \hich\f4 gito binario, por lo que es un s\'ed\loch\f4 \hich\f4 mbolo que puede valer 0 \'db\loch\f4  1.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Un byte es un conjunto de 8 bits. El tama\'f1\loch\f4 \hich\f4 o de las memorias se mide en bytes. En el interior de un procesador se opera con m\'fa\loch\f4 lt\hich\af4\dbch\af31505\loch\f4 
iplos pares de un byte: 2, 4, 8, 6 bytes (16, 32, 64, 128 bits)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *\'f8\loch\f4 \hich\f4 C\'f3\loch\f4 mo se simbolizan los pesos en binario sin necesidad de estimarlos en base diez?
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Nuevamente por razones did\'e1\loch\f4 cticas hemos estimado los valores de las pesas binarias en base diez.
\par \hich\af4\dbch\af31505\loch\f4 *Si bien s\hich\af4\dbch\af31505\loch\f4 \hich\f4 e plante\'db\loch\f4 \hich\f4  que la balanza usaba pesas binarias, y que el peso simbolizado 1101101b se pod\'ed\loch\f4 a lograr sin
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *conocer que es 109d- equilibrando la balanza con pesas binarias, de hecho los c\'e1\loch\f4 lculos que hemos realizado e _ base diez para llegar al 1101101 implican \hich\af4\dbch\af31505\loch\f4 \hich\f4 
m pasaje d\'c8\loch\f4 \hich\f4  base diez a binario, m\'e9\loch\f4 todo que seguiremos usando
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *A fin de ratificar que cada sistema de numeraci\'f3\loch\f4 n no surge del sistema decimal, sino que es independiente, como lo sugiere claramente la posible. dad de pesar usando pesas binarias, expresaremo
\hich\af4\dbch\af31505\loch\f4 \hich\f4 
s en binario el valor de cada pesa de este sistema. Simplemente (figura Al.6.a) si ponemos en el plato izquierdo de la balanza una pesa binaria dos veces mayor que la de l gr. (2d grs.) para equilibrarla se utiliza (1) la pesa de dicho tama\'f1\loch\f4 
o y no se usa \hich\af4\dbch\af31505\loch\f4 (\hich\af4\dbch\af31505\loch\f4 \hich\f4 0) la pesa de 1 gr., o sea que esta pesa en binario se simboliza ir) (l\'e9\loch\f4 \hich\f4 ase uno-cero, y no \'93\loch\f4 \hich\f4 diez\'94\loch\f4 ).\tab 2 i\tab ~~~

\par 
\par \hich\af4\dbch\af31505\loch\f4 ![imagen1](/Figura A1-6.png)
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Conforme con esto, en la fig. Al.2 luego del s\'ed\loch\f4 \hich\f4 mbolo mayor 1 sigue el 10 (1 0\'db\loch\f4 \hich\f4  = 2d), as\'cc\loch\f4 \hich\f4  como en base diez despu\'e9\loch\f4 s
\hich\af4\dbch\af31505\loch\f4  del 9 sigue el 10, y en base ocho al 7 le sigue 10.
\par \hich\af4\dbch\af31505\loch\f4 *Del mismo modo (fig. A1.6.b), si en el plato izquierdo se coloca un cuerpo cuatro veces el peso de 1 gr. (4d grs. en base diez), se equilibra usando (1) la pesa binaria cuatro veces mayor que la de 1 gr
\hich\af4\dbch\af31505\loch\f4 \hich\f4 ., sin usar (0) la pesa dos veces mayor que la de 1 gr., y sin usar (0) la pesa de 1 gr., por lo que en binario este peso se simboliza 100b (l\'e9\loch\f4 \hich\f4 ase uno-cero-cero, y no \'93\loch\f4 \hich\f4 cien
\'94\loch\f4 ). Igualmente un objeto ocho veces mayor que 1 gr (8d grs.) se equilibra con la pe\hich\af4\dbch\af31505\loch\f4 s\hich\af4\dbch\af31505\loch\f4 \hich\f4 a binaria de ese tama\'f1\loch\f4 \hich\f4 o, y ninguna de los tama\'f1\loch\f4 
\hich\f4 os subsiguientes, por lo que en binario este peso es lOOO\'db\loch\f4 \hich\f4 , etc. Por lo tanto, en binario las pesas se simbolizan 1, 10, 100, 1000 . . . (estos mismos s\'ed\loch\f4 mbolos representan los valores de las pesas que se usan
\hich\af4\dbch\af31505\loch\f4  \hich\af4\dbch\af31505\loch\f4 en base diez, aunque en binario representan 1,2,4 y 8, respectivamente).
\par \hich\af4\dbch\af31505\loch\f4 *1000000 100000 10000 1000 100 10 1 )b
\par \hich\af4\dbch\af31505\loch\f4 *1 1 0 1101 (b = (1x1000000+1x100000+0x10000+1x1000+1x100+0x10
\par \hich\af4\dbch\af31505\loch\f4 *1x1)b = 1101101b
\par \hich\af4\dbch\af31505\loch\f4 *Esta cuenta (que indica sumar: la pesa de 1000000, la de 10000\hich\af4\dbch\af31505\loch\f4 \hich\f4 0, no la de 10000, la de 1000, la de 1000, la de 100, no la de 10 y s\'cc\loch\f4 \hich\f4 
 la de 1 gr) realizada en binario dar\'cc\loch\f4 a, obviamente, 1101101b.
\par \tab \hich\af4\dbch\af31505\loch\f4 Figura Al.6. b\tab 1\tab 0 0\tab 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *l\'df\loch\f4 7;-j\tab Los pesos de 1101101b en base diez eran\tab 64 32 16 8 4 2 1
\par \hich\af4\dbch\af31505\loch\f4 *110 110 1 b = [1x64+lx32+0x 16+1x8\hich\af4\dbch\af31505\loch\f4 +1x4+0x2+lxl]d = 109d ; esto es,
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *pensado en base diez se usaron la pesa de 64 m\'e1\loch\f4 \hich\f4 s la de 32, m\'e1\loch\f4 \hich\f4 s la de 8, m\'e1\loch\f4 \hich\f4 s la de 4, m\'e1\loch\f4 
s la de 1, suma que da 109d. Otra vez vemos que al valorar los pesos de una base en base diez, de hecho estamos pasando de esa base a b\hich\af4\dbch\af31505\loch\f4 ase diez.
\par 
\par \hich\af4\dbch\af31505\loch\f4 ![imagen1](/Figura A1-6.png)
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 *Ejercicios:
\par \hich\af4\dbch\af31505\loch\f4 *Con la balanza con pesas binarias pesar un objeto que en base diez pesa lOOd.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *\'d5\loch\f4 dem otro que pesa 124d
\par }{\rtlch\fcs1 \af86\afs24 \ltrch\fcs0 \f86\fs24\kerning1\insrsid10114890 \hich\af86\dbch\af31505\loch\f86 \hich\f86 *\'b8\loch\f86 \hich\f86 Cu\'b7\loch\f86 \hich\f86 l son los n\'ff}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 
\hich\af79\dbch\af31505\loch\f79 \hich\f79 meros binarios naturales extremos representables en n bits expresados en decimal? Vamos a partir de n=4 bits, para luego generalizar para cualquier n\'ff\loch\f79 mero n de bits.
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 \hich\f4 *El valor m\'ed\loch\f4 \hich\f4 nimo es NMIN = 0000b = 0d; y el m\'e1\loch\f4 ximo NMAX = llllb=15d=16-l=24-l En general p
\hich\af4\dbch\af31505\loch\f4 ara n bits\tab 
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 *NMIN - 00\tab \hich\f79 00b - Od; y el m\'b7\loch\f79 ximo NMAX = 11\tab \hich\f79 I Ib = (2n - l)d (el n\'ff\loch\f79 
mero que sigue a NMAX menos uno)
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 *n bits\tab n bits
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Sistema en base diecis\'e9\loch\f4 is o hexadecimal (hexa)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *En hexa los diecis\'e9\loch\f4 \hich\f4 is s\'ed\loch\f4 mbolos van del 0 a F (fig. A 1.2), con los cuales se pued}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 
\hich\af79\dbch\af31505\loch\f79 \hich\f79 e formar cualquier n\'ff\loch\f79 \hich\f79 mero. Mientras que en base diez para indicar del 10 al 15 se necesitan dos s\'ed\loch\f79 mbolos, en hexa se usa uno solo.
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Con los mismos supuestos que planteamos para la pesada realizada en relaci\'f3\loch\f4 n con la fig. A1.1, pesaremos (fig. Al.3) el mism
\hich\af4\dbch\af31505\loch\f4 \hich\f4 o objeto cuyo peso en hexa supondremos desconocido, siendo que en base diez pesa 109 grs. Veamos cu\'e1\loch\f4 \hich\f4 les son las pesas en hexa. Si cada pesa en relaci\'f3\loch\f4 \hich\f4 n con la del tama\'f1
\loch\f4 \hich\f4 o anterior en base diez era diez veces m\'b7\loch\f4 \hich\f4 s pesada, en hexa lo ser\'b7\loch\f4 \hich\f4  diecis\'e9\loch\f4 is veces: jun\hich\af4\dbch\af31505\loch\f4 t\hich\af4\dbch\af31505\loch\f4 \hich\f4 ando diecis\'e9\loch\f4 
\hich\f4 is pesas de un valor se construye una pesa del tama\'d2\loch\f4 \hich\f4 o siguiente. Si para fines did\'e1\loch\f4 \hich\f4 cticos simbolizamos en base diez el peso de cada tipo de pesa hexadecimal se tendr\'ed\loch\f4 
a la serie de valores: 1 gr; lgr xl6d = 16d grs; 16d grs xl6d = 256d grs; 256\hich\af4\dbch\af31505\loch\f4 d\hich\af4\dbch\af31505\loch\f4 \hich\f4  grs xl6d = 4096d grs., etc. El s\'ed\loch\f4 \hich\f4 mbolo \'ec\loch\f4 \hich\f4 d\'ee\loch\f4 \hich\f4 
 indica que se trata de base diez. El s\'ed\loch\f4 \hich\f4 mbolo para representar 1 gr. es el mismo en ambas bases. De cada uno de dichos tama\'f1\loch\f4 \hich\f4 os existen un total de F pesas hexadecimales (en base diez eran 9), siendo F =15d el s
\'ed\loch\f4 m\hich\af4\dbch\af31505\loch\f4 b\hich\af4\dbch\af31505\loch\f4 olo hexadecimal de mayor valor:
\par 
\par 
\par 
\par 
\par \loch\af4\dbch\af31505\hich\f4 \emdash \emdash \emdash \loch\f4 \hich\f4 P\'e1\loch\f4 g 139 a 141
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 * F pesa de 1 gr.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * F pesas diedis\'e9\loch\f4 is veces mayor que la de 1 gr. (16d grs)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * F pesos docientoscincuenta y seis veces mayor que la de 1 gr. (256d grs) y diecis\'e9\loch\f4 \hich\f4 is veces el tama\'f1\loch\f4 o anterior
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * F pesas mil veinticuatro veces mayor que la de 1 gr. (1024d grs) y diecis\'e9\loch\f4 \hich\f4 is veces el tama\'f1\loch\f4 o anterior.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 y as\'cc\loch\f4 \hich\f4  de seguido, o sea que podemos tener m\'b7\loch\f4 \hich\f4 s subconjuntos de F pesas que sean m\'fa\loch\f4 \hich\f4 ltiplos de diecis\'e9\loch\f4 is
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 (te\'f3\loch\f4 \hich\f4 ricamente infinitos), seg\'fa\loch\f4 n sea la magnitud d\hich\af4\dbch\af31505\loch\f4 el peso de los objetos que se quiere pesar.
\par 
\par \hich\af4\dbch\af31505\loch\f4 ![imagen1](/Figura A1-7.png)
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Otra vez pasaremos el objeto que en base diez pesaba 109 grs. La selecci\'f3\loch\f4 n de las pesas adecuadas la simularemos
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 haciendo c\'e1\loch\f4 \hich\f4 lculos simples en base diez, como se hizo en relaci\'f3\loch\f4 n con\hich\af4\dbch\af31505\loch\f4  las figuras A 1.1 y A 1.3.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Suponiendo que se empieza adecuadamente a equilibrar la balanza con las pesas diecis\'e9\loch\f4 \hich\f4 is veces m\'b7\loch\f4 s pesadas
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 que 1 gr., se podr\'e1\loch\f4 n colocar hasta 6 pesas de este peso, con la cual, calculando en base diez, habremos equilibrado
\par \hich\af4\dbch\af31505\loch\f4 6x16=9\hich\af4\dbch\af31505\loch\f4 6d grs., faltando equilibrar 109-96=13d grs. El equilibrio de los platillos se logra agregando 13d= Dh pesas del
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 tama\'f1\loch\f4 o menor siguiente, que es de 1 gr. Por consiguiente, el peso del objeto en hexa es 6D. O sea: 109d = 155o = 1101101b = 6Dh
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 As\'cc\loch\f4  mismo, si \hich\af4\dbch\af31505\loch\f4 \hich\f4 pensamos en el conjunto de personas que en base diez fue dividido conforme indican los s\'ed\loch\f4 \hich\f4 
mbolos 109, dicha totalidad en base diecis\'e9\loch\f4 \hich\f4 is fue dividida (pensando el tama\'f1\loch\f4 o de los grupos en base diez), en 6 grupos de 16, y 13 grupos de una persona, siendo que \hich\af4\dbch\af31505\loch\f4 p
\hich\af4\dbch\af31505\loch\f4 ueden existir hasta F=15 grupos de cada tipo.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 #\'f8\loch\f4 Como se simbolizan los pesos en hexadecimal sin necesidad de estimarlos en base diez?#
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Al igual que cualquier otro sitema, el hexadecimal no surge del sistema decimal, sino que es independiente, como as\'ed\loch\f4  lo \hich\af4\dbch\af31505\loch\f4 \hich\f4 
sugiere la posibilidad de pesar el objeto en cuesti\'f3\loch\f4 \hich\f4 n usando pesas hexadecimales, pudi\'e9\loch\f4 ndose simbolizar en hexa el valor de las pesas o pesos de este sistema. 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Simplemente si ponemos en el plato izquierdo de la balanza un peso diecis\'e9\loch\f4 is veces mayor que 1 g\hich\af4\dbch\af31505\loch\f4 r. (16 grs. en base diez)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 para equilibrar hace falta una sola pesa diecis\'e9\loch\f4 \hich\f4 is veces mayor que 1 gr., y ninguna (cero) pesa de 1 gr., osea que esta pesa o peso en hexa se simboliza 10 (L\'e9\loch\f4 
ase uno-cero, y no "diez").
\par \hich\af4\dbch\af31505\loch\f4 Conforme con esto, en la fig. A1.2 luego de\hich\af4\dbch\af31505\loch\f4 \hich\f4 l s\'ed\loch\f4 \hich\f4 mbolo mayor F sigue el 10 (1 0h = 16d), as\'cc\loch\f4 \hich\f4  como en base diez despu\'e9\loch\f4 \hich\f4 
s del 9 sigue el 10, en octal despu\'e9\loch\f4 \hich\f4 s del 7 sigue 10, y en binario despu\'e9\loch\f4 s del 1 sigue el 10.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Del mismo modo si en el plato izquierdo se colocar\'cc\loch\f4 a un peso doscientos cincuenta y seis v\hich\af4\dbch\af31505\loch\f4 \hich\f4 eces mayor que 1gr. se equilibra con una sola de peso de ese tama\'f1
\loch\f4 \hich\f4 o y ninguna de los tama\'f1\loch\f4 \hich\f4 os menores, por lo que en hexa este peso se simboliza 100h (l\'e9\loch\f4 ase uno-cero-cero, y no "cien")
\par 
\par \hich\af4\dbch\af31505\loch\f4 ![imagen1](/Figura A1-8.png)
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Por lo tanto, tambi\'e9\loch\f4 n en hexa las pesas s\hich\af4\dbch\af31505\loch\f4 \hich\f4 e simbolizan 1, 10, 100, 1000 ... (estos s\'ed\loch\f4 
mbolos representan los valores de las pesas que se usan en base diez, aunque en hexa representan 1, 16, 256, y 4096, respectivamente). o sea 100% en hexa: 6 Dh= 6x10+ Dx1]h. Esta cuenta (que indica 6 pesas de 100,\hich\af4\dbch\af31505\loch\f4 \hich\f4  m
\'e1\loch\f4 \hich\f4 s D pesas de 1) realizada en hexadecimal dar\'cc\loch\f4 a, obviamente, 6 Dh.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Con los pesos de 6 Dh en base diez es: 6 Dh= [6x16+13x1]d= 109d; esto es, pensando en base diez se usaron una pesa de 64 m\'e1\loch\f4 \hich\f4 s 5 de 8, m\'e1\hich\af4\dbch\af31505\loch\f4 \hich\f4 
s 5 de 1, sumar que da 109d. Como ya se dijo, al valorar los pesos de una base en base diez en esencia se est\'b7\loch\f4  pasando de dicha base diez.
\par 
\par \hich\af4\dbch\af31505\loch\f4 **Ejercicios:**
\par \hich\af4\dbch\af31505\loch\f4 Con la balanza con pesas hexadecimales pesar un objeto que en base diez pesa 112d. Respuesta: 70h
\par \hich\af4\dbch\af31505\loch\f4 Id\hich\af4\dbch\af31505\loch\f4 em otro que pesa 100d\tab \tab \tab \tab \tab \tab Respuesta: 64h
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 #\'f8\loch\f4 \hich\f4 C\'f3\loch\f4 \hich\f4 mo se halla f\'e1\loch\f4 cilmente el siguiente de cada n}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \loch\af79\dbch\af31505\hich\f79 \'ff
\loch\f79 mero en una base?#
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 El cuenta vueltas que indica los kms, recorridos por un auto conta de ruedas con los s\'ed\loch\f4 mbolos del 0 al 9.
\par \hich\af4\dbch\af31505\loch\f4 Cada rueda al cambiar de 9 a 0 obliga\hich\af4\dbch\af31505\loch\f4 \hich\f4  a la que est\'e1\loch\f4 \hich\f4  a su izquierda a avanzar una posici\'f3\loch\f4 \hich\f4 
n. La rueda de las unidades progresa una unidad merced a una acci\'f3\loch\f4 \hich\f4 n exterior para que las otras puedan cambiar, si as\'cc\loch\f4  debe ocurrir.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Suponiendo que el n\'fa\loch\f4 \hich\f4 mero que est\'e1\loch\f4  frente al visor es 4588, si la rueda \hich\af4\dbch\af31505\loch\f4 \hich\f4 de las unidades avanza un s\'ed\loch\f4 \hich\f4 mbolo, pasar\'b7
\loch\f4 \hich\f4  de 8 a 9 sin afectar la rueda de las decenas, por lo que el n\'fa\loch\f4 mero siguiente es 4589. Cuando las unidades vuelvan a aumentar uno,
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ahora pasar\'b7\loch\f4 \hich\f4 n de 9 a 0, lo que har\'b7\loch\f4 \hich\f4  que las decenas tambi\'e9\loch\f4 n progresen uno. de 8 a 9.\hich\af4\dbch\af31505\loch\f4 \hich\f4 
 Sin afectar las centenas. Por lo tanto, el n\'fa\loch\f4 \hich\f4 mero que sigue ser\'b7\loch\f4 \hich\f4  4590. Con las mismas consideraciones, si las unidades siguen aumentando uno, sucesivamente se tendr\'e1\'b7\loch\f4 \hich\f4 
: 4591, 4592,... 4599. Luego de \'c8\loch\f4 ste las unidades pasan de 9 a 0, lo que hace que las de\hich\af4\dbch\af31505\loch\f4 c\hich\af4\dbch\af31505\loch\f4 \hich\f4 enas tambi\'e9\loch\f4 \hich\f4 
n pasen de 9 a 0, lo cual a su vez obliga que las centenas cambien de 5 a 6. As\'ed\loch\f4 \hich\f4  formar\'e1\loch\f4 \hich\f4  el 4600, y as\'cc\loch\f4  de seguido.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Cuantas vueltas hexadecimales y binarias nos permitir\'e1\loch\f4 \hich\f4 n hallar f\'e1\loch\f4 \hich\f4 cilmente el n\'fa\loch\f4 mero que sigue a otro dado.
\par \hich\af4\dbch\af31505\loch\f4 En hexadecimal cada r\hich\af4\dbch\af31505\loch\f4 \hich\f4 ueda tiene diecis\'e9\loch\f4 \hich\f4 is s\'ed\loch\f4 \hich\f4 mbolos (0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F) y cuando cambio de F a 0 hace cambiar la rueda que est
\'e1\loch\f4 \hich\f4  a su izquierda. salvo que hay 16 s\'ed\loch\f4 mbolos en cada rueda en vez de diez, todo es igual al cuenta vueltas anterior.
\par \hich\af4\dbch\af31505\loch\f4 Asumiendo que el cuent}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 a vueltas hexadecimal indica 3899, si las ruedas de las unidades avanza un s\'ed
\loch\f79 \hich\f79 mbolo, pasar\'b7\loch\f79 \hich\f79  de 9 a A, sin hacer cambiar la rueda que est\'b7\loch\f79 \hich\f79  a su izquierda, por lo que el n\'ff\loch\f79 mero hexadecimal siguiente es 389A. Luego, cada vez que las
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 unidades aumentan en uno, s\hich\af4\dbch\af31505\loch\f4 \hich\f4 ucesivamente se ir\'b7\loch\f4 \hich\f4 
n formando 389B, 389C, 389D, 389E,389F. Con del siguiente cambio de la ruedade las unidades, Esta pasar\'e1\loch\f4 \hich\f4  de F a 0, con lo cual la rueda que Est\'e1\loch\f4 \hich\f4  a su izquierda cambiar\'b7\loch\f4 \hich\f4 
 de 9 a A, sin afectar a la rueda que est\'e1\loch\f4  a su izquierda.
\par \hich\af4\dbch\af31505\loch\f4 Por lo tan\hich\af4\dbch\af31505\loch\f4 \hich\f4 to, el n\'fa\loch\f4 \hich\f4 mero que sigue es 389A0, y as\'cc\loch\f4  sucesivamente. 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Suponiendo que el cuenta vueltas progrese hasta 3FFF, con el siguiente avance en un de la rueda de las unidades Est\'e1\loch\f4 \hich\f4  pasar\'b7\loch\f4 \hich\f4  de F a 0, forzando que la rueda que est\'e1
\loch\f4 \hich\f4  a su izquierda tambi\'e9\loch\f4 n cambie de F \hich\af4\dbch\af31505\loch\f4 \hich\f4 a 0, lo que a su vez tambi\'e9\loch\f4 \hich\f4 n hace que su rueda vecina izquierda pase de F a 0, lo que a su vez har\'b7\loch\f4 \hich\f4 
 que la rueda que est\'e1\loch\f4  a su izquierda cambie de 3 a 4. En definitiva de 3FFF se pasa a 4000.
\par 
\par \hich\af4\dbch\af31505\loch\f4 Podemos imaginar un **Cuenta vueltas binario** constituido por \hich\af4\dbch\af31505\loch\f4 \hich\f4 ruedas que s\'f3\loch\f4 \hich\f4 lo tienen dos s\'ed\loch\f4 \hich\f4 
mbolos: **0** y **1**, cada uno ocupando una mitad de cada rueda. cuando una rueda pasa de 1 a 0 obliga a la que est\'b7\loch\f4  a su izquierda que gire mediante vuelta para que pase a 1 si estaba en 0, o que pase a 0 si estaba en 1.
\par \hich\af4\dbch\af31505\loch\f4 Supo\hich\af4\dbch\af31505\loch\f4 \hich\f4 niendo que esta cuenta vueltas indique 1010, si la rueda extrema derecha de las unidades avanza uno pasar\'b7\loch\f4 \hich\f4  de 0 a 1, sin afectar a la rueda que est\'e1
\loch\f4 \hich\f4  a su izquierda, por lo que el n\'fa\loch\f4 \hich\f4 mero binario que sigue ser\'e1\loch\f4  1011. Cuando la rueda de las unidades vuelve a\hich\af4\dbch\af31505\loch\f4  \hich\af4\dbch\af31505\loch\f4 \hich\f4 
cambiar, esta vez de 1 a 0, har\'e1\loch\f4  que la rueda vecina izquierda que estaba en 1 pase a 0. Esto a su vez obliga a que la rueda vecina izquierda que estaba en 0 cambie a uno, lo cual 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 no afectar\'e1\loch\f4  a la rueda vecina izquierda de la misma. Entonces a 1011 sigue \hich\af4\dbch\af31505\loch\f4 1100, etc. 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 En la fig. 1.4 puede verificarse con este m\'e9\loch\f4 \hich\f4 todo la generaci\'f3\loch\f4 \hich\f4 n de sucesi\'f3\loch\f4 n de binarios de 0000 al 1111.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 #\'f8\loch\f4 \hich\f4 Cuannto bits se necesitan por cada d\'ed\loch\f4 gito decimal a representar?#
\par 
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 El n\'ff\loch\f79 \hich\f79 mero decimal 109 de 3 d\'ed}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\hich\af4\dbch\af31505\loch\f4 \hich\f4 gitos, en binario es 11011001 de bits. Si consideramos que 109 es un poco mayor que el 99 de dos d\'ed\loch\f4 gitos, resulta 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 aproximadamente 7/2 = 3,5 bits por cada d\'ed\loch\f4 \hich\f4 gito decimal. 512d= 1000000000b o sea 10 bits para representar 3 d\'ed\loch\f4 gitos decimales: 1073=3,3 bits p\hich\af4\dbch\af31505\loch\f4 \hich\f4 
or d\'ed\loch\f4 gito decimal.
\par \hich\af4\dbch\af31505\loch\f4 Con 2 bits se forman 4 = 2^2 Combinaciones binarios (00 01 10 11). Con 3 bits se forman 8=2^3 combinaciones binarios (000 001 010 011 100 101 110 111). 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 En la figura 1.4 de la secci\'f3\loch\f4 n 1,2 aparecen las 16 = 2^4 combinaciones binarios que \hich\af4\dbch\af31505\loch\f4 se forman con 4 bits.
\par 
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 * O sea, que el exponente de dos indica la cantidad de bits que se necesitan para formar un n\'ff\loch\f79 
mero de combinaciones que es potencia de dos, siendo que si el 
\par \hich\af79\dbch\af31505\loch\f79 \hich\f79 exponente aumenta en uno, el n\'ff\loch\f79 mero de combinaciones se duplica.*
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par \hich\af4\dbch\af31505\loch\f4 Es impor\hich\af4\dbch\af31505\loch\f4 \hich\f4 tante recordar siempre que 2^10=1024, n\'fa\loch\f4 mero cercano a 1000= 10^3 (1K)
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 El exponente diez de dos indica que con 10 bits puede formarse 1024 n\'ff\loch\f79 \hich\f79 
meros o combinaciones binarias distintas (de 0000000000 a 1111111111b =1023d), n\'ff\loch\f79 mero
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 \hich\f4 cercano a 1000d que es el n\'fa\loch\f4 m}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 
\hich\af79\dbch\af31505\loch\f79 \hich\f79 ero de n\'ff\loch\f79 \hich\f79 meros o combinaciones que en base diez puesto en el platillo derecho den formarse con 3 d\'ed\loch\f79 gitos decimales (de 000 a 999),
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 siendo 3 el exponente de diez.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Por lo tanto, un n\'fa\loch\f4 mero aproximadamente igual de combinaciones distintas se forman con 10 bi\hich\af4\dbch\af31505\loch\f4 \hich\f4 ts en binario, y con 3 d\'ed\loch\f4 
gitos en decimal. O sea unos 10 bits por
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 cada 3 d\'ed\loch\f4 \hich\f4 gitos decimales, lo que da 10/3=**3,33bits** por cada d\'ed\loch\f4 gito decimal.
\par 
\par \hich\af4\dbch\af31505\loch\f4 **Ejercicio:**
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Cu\'e1\loch\f4 \hich\f4 ntos bits se necesitan para formar 10^6 (1Mega) n\'fa\loch\f4 meros distintos.\tab \tab \tab \tab 
\par \hich\af4\dbch\af31505\loch\f4 Respuesta 6x3,33=19,\hich\af4\dbch\af31505\loch\f4 98 ~ 20 bits
\par \hich\af4\dbch\af31505\loch\f4 Otra forma de hacerlo: 2^10, se tiene 10^6= 10^3 x 10^3 ~ 2^10 x 2^10 = 2^20 El exponente indica que hacen falta 20 bits
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 #conversi\'f3\loch\f4 n entre bases
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 #conversi\'f3\loch\f4 n de una base cualquiera a base diez#
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Se trata de una metodolog\'ed}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 
a que de hecho hemos realizado anteriormente cuando evaluamos en base diez los valores de las pesas con las cuales formaremos n\'ff\loch\f79 meros en 
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 \hich\f4 otras bases. As\'ed\loch\f4 , hemos realizado:
\par 
\par \hich\af4\dbch\af31505\loch\f4 64 8 1
\par \hich\af4\dbch\af31505\loch\f4 1  5 5 0 = [1x64+5x8+5x1]d=109d
\par 
\par \hich\af4\dbch\af31505\loch\f4 64 32 16 8 4 2 1d
\par \hich\af4\dbch\af31505\loch\f4 1   1  0 1 1 0 1b = [1x6\hich\af4\dbch\af31505\loch\f4 4+1x32+0x16+1x8+1x4+0x2+1x1]d = 109d
\par 
\par \hich\af4\dbch\af31505\loch\f4 16 1
\par \hich\af4\dbch\af31505\loch\f4 6  D h = [6x16+ 13x1]d = 109d
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 **Regla:**
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **1** *Escribir sobre cada posici\'f3\loch\f4 n su peso en decimal*
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **2** *Sumar los productos del peso decimalde cada posici\'f3\loch\f4 \hich\f4 n por el s\'ed\loch\f4 mbolo*
\par \hich\af4\dbch\af31505\loch\f4 *que aparece en ella (en hexa se debe\hich\af4\dbch\af31505\loch\f4 \hich\f4  pasar los s\'ed\loch\f4 mbolos A,B,C,D,E,F a base diez).*
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *El resultado de esta suma ser\'e1\loch\f4 \hich\f4  el n\'fa\loch\f4 mero decimal buscado*
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **Ejercicio:** Convertir a decimal el n\'fa\loch\f4 mero binario 10000
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4                Convertir a decimal los n\'fa\loch\f4 meros hexadecimales 109 y 100A
\par \tab \hich\af4\dbch\af31505\loch\f4 \hich\f4        Convertir a decimal el n\'fa\loch\f4 mero octal 1037
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 #conversi\'f3\loch\f4 \hich\f4 n de base diez a otra base cualquiera por el "m\'e9\loch\f4 todo de las pesas"#
\par \hich\af4\dbch\af31505\loch\f4 Como se puso de relieve anteriormente, el hecho de pesar con pesas de otras bases objetos cuyo peso es conocido en base diez (fig\hich\af4\dbch\af31505\loch\f4 \hich\f4 
ura A 1.3, A 1.5, A 1.7) permite determinar en octal, binar, etc. Los s\'ed\loch\f4 mbolos que representan en estas bases el peso de dicho objetos.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *O sea que el m\'e9\loch\f4 todo de simular que se pesa un objeto, cuyo peso se conoce en base diez, con pesas de una cierta base c\hich\af4\dbch\af31505\loch\f4 \hich\f4 
uya magnitud se estima en base diez **permite convertir un n\'fa\loch\f4 mero en base diez a otra cualquiera** *
\par 
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 #Regla para pasar un n\'ff\loch\f79 mero decimal a binario:# (no se requiere realizar dibujo alguno)
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **a.** *Dado el n\'fa\loch\f4 mero a convertir, se parte de la pesa binario q\hich\af4\dbch\af31505\loch\f4 \hich\f4 ue en base diez tiene un valor igual a dicho n\'fa\loch\f4 mero, o que*
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4        *presenta el valor menor m\'e1\loch\f4 \hich\f4 s pr\'f3\loch\f4 ximo al mismo; y a partir de este valor la mitad del anterior.*
\par \hich\af4\dbch\af31505\loch\f4        *decreciente de las pesas binarias hasta el valor uno, siendo cada valor la mitad del \hich\af4\dbch\af31505\loch\f4 anterior.*
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **b.** *Se coloca un **uno** debajo del primero valor determinado en el paso anterior. A este valor decimal se le sumar\'b7\loch\f4  el valor*
\par \hich\af4\dbch\af31505\loch\f4        *decimal de cada peso binario que sigue a la derecha sin omitir ninguno hasta el peso uno. Si al sumar el v\hich\af4\dbch\af31505\loch\f4 alor de la*
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79        *pesa que sigue a la \'ff\loch\f79 \hich\f79 ultima que se analiz\'f3\loch\f79 \hich\f79 
 el resultado alcanzando iguala o es menor que el n\'ff\loch\f79 mero decimal a convertir,*
\par \hich\af79\dbch\af31505\loch\f79 \hich\f79        *se colocar\'b7\loch\f79 \hich\f79  un uno debajo del valor de esa pesa; y si ese resultado supera dicho n\'ff\loch\f79 mero se coloca un cero, }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 
\f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 para indicar*
\par \hich\af4\dbch\af31505\loch\f4        *que esa pesa no se usa para balancear.*
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **c.** *Los unos y ceros as\'cc\loch\f4  determinados de izquierda a derecha son los bits del n}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \loch\af79\dbch\af31505\hich\f79 \'ff\loch\f79 
mero binario buscando.
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **Ejemplo:** Convertir el n\'fa\loch\f4 mero 284d a binario
\par \hich\af4\dbch\af31505\loch\f4 a.-> 256 128 64 32 16 8 4 2 1 d
\par \hich\af4\dbch\af31505\loch\f4 b.->  \hich\af4\dbch\af31505\loch\f4 1   0   0  0  1 1 1 0 0 b   c. 284d = 100011100d
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 En el paso a. se comenz\'f3\loch\f4 \hich\f4  con la pesa de valor 256, que es la menor en relaci\'f3\loch\f4 n con 284, siendo que la de 512 lo supera.
\par \hich\af4\dbch\af31505\loch\f4 El paso b. comienza escribiendo un uno debajo de 256. Sumando el valor 128 que le sigu\hich\af4\dbch\af31505\loch\f4 \hich\f4 e dar\'cc\loch\f4 \hich\f4 
a 256 + 128 = 384 > 284, por lo que se coloca 0 debajo del 128. Lo mismo ocurre si intentamos sumar al 256 ya sea 64 o 32, por lo que tambi\'e9\loch\f4 
n escribimos un cero debajo del 64 y del 32, para indicar que no se han usado estas pesas. Con el peso 16. Co\hich\af4\dbch\af31505\loch\f4 n\hich\af4\dbch\af31505\loch\f4 \hich\f4  el peso 8 resulta 272 + 8 = 280<284 por lo que tambi\'e9\loch\f4 
\hich\f4 n se escribe un uno bajo del 8. Restan equilibrar 284 - 280 = 4, lo cual se consigue con la pesa de ese valor, escribi\'e9\loch\f4 ndose un uno debajo del 4. Dado que se ha equilibrado el 284 con las pesas indicad\hich\af4\dbch\af31505\loch\f4 a
\hich\af4\dbch\af31505\loch\f4 \hich\f4 s con un uno, no se usar\'b7\loch\f4 \hich\f4 n las pesas de 2 y 1, coloc\'e1\loch\f4 ndose un cero debajo de cada uno de esos valores.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **verificaci\'f3\loch\f4 \hich\f4 n:** Siempre es factible determinar si el resultado de una conversi\'f3\loch\f4 \hich\f4 n est\'b7\loch\f4  bien, realizando el pasaje inverso a base
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 diez del n\'fa\hich\af4\dbch\af31505\loch\f4 \hich\f4 mero binario hallado, seg\'cc\loch\f4 n la regla antes indicada:
\par \hich\af4\dbch\af31505\loch\f4 256  128  64  32  16  8  4  2  1 d
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4  1    0    0   0   1  1  1  0  0 b = (1x256+1x16+1x8+1x4)d=284d   Se verifica que la conversi\'f3\loch\f4 n fue bien hecha.
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 **Ejercicio** Convertir 100d a binario\tab \tab \tab \tab Respuesta: 1\hich\af4\dbch\af31505\loch\f4 100100b
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \tab \hich\af79\dbch\af31505\loch\f79 \hich\f79       Con el presente m\'e9\loch\f79 \hich\f79 todo formar los n\'ff\loch\f79 
meros binarios del 0 al 15, y verificar su concordancia con la fig. 1.4.
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **M\'e9\loch\f4 todo para pasar de base diez a hexadecimal:**
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \tab \hich\af79\dbch\af31505\loch\f79 \hich\f79 ***a.** Dado el n\'ff\loch\f79 mero a convertir, se parte de la pesa hexadecimal que en base }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 
\f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 \hich\f4 diez tiene un valor igual a dicho n\'fa\loch\f4 \hich\f4 mero, o que presenta el valor menor m\'e1\loch\f4 \hich\f4 s pr\'f3\loch\f4 \hich\f4 
ximo al mismo; y a partir de este valor se escriben en base diez los sucesivos valores decrecientes de las pesas hexadecimales hasta el valor uno, siendo cada valor diecis\'e9\loch\f4 is v\hich\af4\dbch\af31505\loch\f4 e\hich\af4\dbch\af31505\loch\f4 
ces menor que el anterior.
\par \tab \hich\af4\dbch\af31505\loch\f4 \hich\f4 **b.** Repitiendo la metodolog\'ed\loch\f4 \hich\f4 a de las pesas desarrollada en relaci\'f3\loch\f4 n con la figura A 1.7, sistematizaremos la forma de hallar
\par \tab \hich\af4\dbch\af31505\loch\f4 \hich\f4 los d\'ed\loch\f4 \hich\f4 gitos hexadecimales a trav\'e9\loch\f4 s del siguiente ejemplo representativo.
\par 
\par \hich\af4\dbch\af31505\loch\f4 **EJEMPLO:** Convertir el}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79  n\'ff\loch\f79 mero 2574d a hexadecimal
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4  **a.** -> 256 16 1 d
\par \hich\af4\dbch\af31505\loch\f4  **b.**     A   0 E h
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 En el paso a. no se pudo usar ninguna pesa de valor 4096d, por lo que se comenz\'f3\loch\f4 \hich\f4  con las de valor 256d que es la menor en relaci\'f3\loch\f4 
n con 2574d. para el paso b., si usamos 10d = Ah pesas\hich\af4\dbch\af31505\loch\f4 
 de 256d habremos equilibrado 10x256 = 2560< 2574 (de haber puesto 11 = B pesas de 256 excedemos a 1574. Entonces debe escribirse A debajo de 256. Falta equilibrar 2574 - 2560 = 14. Si se probara equilibrar con pesas hexadecimales que valen 16 en base die
\hich\af4\dbch\af31505\loch\f4 z\hich\af4\dbch\af31505\loch\f4 \hich\f4 , no ser\'cc\loch\f4 \hich\f4 a posible colocar ninguna (cero), pues si se pusiera una, se tendr\'ed\loch\f4 \hich\f4 a 2560 + 16 = 2576  excedi\'e9\loch\f4 
ndose el numero 2574, por lo que debe escribirse 0
\par \hich\af4\dbch\af31505\loch\f4           
\par 
\par 
\par 
\par \loch\af4\dbch\af31505\hich\f4 \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \loch\f4 \hich\f4 ^\'e1\loch\f4 g 142 a 144   
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 debajo del 16. Los 14 que falta equilibrar se consiguen con 14d = Eh pesas de valor uno, debi\'e9\loch\f4 ndose escribir **E** debajo del 1.
\par \hich\af4\dbch\af31505\loch\f4 En definitiva resulta 2574d = A0Eh.
\par 
\par \hich\af4\dbch\af31505\loch\f4               256  16  1
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *verificaci\'f3\loch\f4 n*: A   O   E h = (10x256 + 0x16 + 14x1)d = 2574d    \hich\af4\dbch\af31505\loch\f4 \hich\f4  Se verifica que la conversi\'f3\loch\f4 n fue bien hecha.
\par 
\par \hich\af4\dbch\af31505\loch\f4 *Ejercicio* Convertir 45056d a hexadecimal                        Respuesta:B00h
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ## Otros m\'e9\loch\f4 todos para convertir de base diez a otra base cualquiera
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *M\'e9\loch\f4 todo de las divisiones sucesivas por la base a la que\hich\af4\dbch\af31505\loch\f4  se quiere pasar:
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4     **1.  Dividir por el valor decimal de la base el n\'fa\loch\f4 mero decimal a convertir.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4           Idem el cociente a\'cc\loch\f4  obtenido.
\par \hich\af4\dbch\af31505\loch\f4           Idem hasta obtener un cociente menor que divisor
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4       2.  Este ultimo cociente y los restos de las divisiones efectuadas, constituyen, en ese orden, el n\'fa\loch\f4 mero buscado.**
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **EJEMPLOS** (la justificaci\'f3\loch\f4 \hich\f4 n de este m\'e9\loch\f4 todo se da en la Unidad 4 de la presente obra)
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 a. Convertir a binario los n\'ff\loch\f79 meros decimales}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\hich\af4\dbch\af31505\loch\f4  13 y 12
\par 
\par \hich\af4\dbch\af31505\loch\f4     13 / 2                             12 / 2
\par \hich\af4\dbch\af31505\loch\f4   **1** 6 / 2                         **0** 6 / 2
\par \hich\af4\dbch\af31505\loch\f4     **0** 3 / 2                         **0** 3 / 2
\par \hich\af4\dbch\af31505\loch\f4       **1** **1**                          **1** **1**
\par 
\par \hich\af4\dbch\af31505\loch\f4               **1101**=13                 \hich\af4\dbch\af31505\loch\f4     **1100**=12
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 b. Convertir a hexadecimal el n\'fa\loch\f4 mero decimal 16140
\par 
\par \hich\af4\dbch\af31505\loch\f4 **16140 / 16
\par \hich\af4\dbch\af31505\loch\f4    0140   1008   / 16
\par \hich\af4\dbch\af31505\loch\f4      12=C   48     63   / 16
\par \hich\af4\dbch\af31505\loch\f4              0=0   15=F   3=3
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4                                         3F0C=16140**
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Ejercicio: Usando el presente m\'e9\loch\f4 tod}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 o pasar el n\'ff\loch\f79 
mero 109d a binario y hexadecimal.
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ##\'f8\loch\f4 \hich\f4 C\'f3\loch\f4 mo se pasa directamente de binario a hexa, y viceversa?
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Como se anticip\'f3\loch\f4  al traer el sistema hexadecimal, Este se usa para pasar de una forma sencilla de binario a
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 hexa y viceversa *usando en pantalla o en el papel la cuarta parte de los s\'ed\loch\f4 mbolos de los que se utilizan
\par \hich\af4\dbch\af31505\loch\f4 en binario*, siendo que en el interior de un computador solo se puede representar el sistema binario.
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 **Regla para pasar de binario a hexadecimal**:
\par 
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 1. A partir del bit extremo derecho del n\'ff\loch\f79 mero binario, dividirlo en cuartetos, agregando ceros a la izquierda si se necesita.

\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par \hich\af4\dbch\af31505\loch\f4 2. Asignar a cada cuarteto los pesos 8-4-2-1 en forma escrita o mentalmente.
\par 
\par \hich\af4\dbch\af31505\loch\f4 3. Sumar en base diez los pesos de cada cuarteto\hich\af4\dbch\af31505\loch\f4  correspondientes a los bits de valor 1, o sea hallar su valor en base diez.
\par 
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 4. El n\'ff\loch\f79 \hich\f79 mero resultante de cada suma as\'ed\loch\f79 \hich\f79  efectuada en cada cuarteto seg\'ff\loch\f79 
\hich\f79 n el paso anterior, ser\'e1\loch\f79 \hich\f79  el d\'ed\loch\f79 gito hexadecimal
\par \hich\af79\dbch\af31505\loch\f79 \hich\f79    correspondiente a ese cuarteto, siendo que si dicho n\'ff\loch\f79 me}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 \hich\f4 ro es del 0 al 9 ser\'b7
\loch\f4  el mismo en hexa; y si el mismo es 10 el
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4    d\'ed\loch\f4 \hich\f4 gito hexadecimal ser\'b7\loch\f4 \hich\f4  A, si es B, si es 12 ser\'b7\loch\f4 \hich\f4  C, si es 13 ser\'b7\loch\f4 \hich\f4  D, si es 14 ser\'b7\loch\f4 \hich\f4  E, si es 15 ser\'b7
\loch\f4  F.
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **EJEMPLO** Convertir a hexadecimal el n\'fa\loch\f4 mero binario 110011100
\par 
\par \hich\af4\dbch\af31505\loch\f4 Pasos 1. y 2. **8  4  2  1    8  4  2  1    8  4  2  1**
\par \hich\af4\dbch\af31505\loch\f4    
\par \hich\af4\dbch\af31505\loch\f4                 0  0  0  1    1  0  0  1    1  1  0  0  =  19Ch
\par \hich\af4\dbch\af31505\loch\f4 Pasos 3. y 4.       1            8+1=9       8+4=12=C
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 *Ejercicio*: Convertir a hexa 1010000011110111 y 1100011101                \hich\af4\dbch\af31505\loch\f4                   *Respuesta: A0F7h y 31DH*
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4              Con un m\'e9\loch\f4 \hich\f4 todo semejante al presente y formando tr\'ed\loch\f4 os, pasar 1101101b a octal    *Respuesta: 155o
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 *En caso que los restos decimales superen el valor 9.(como puede ocurrir cuando se pasa de decimal a\hich\af4\dbch\af31505\loch\f4  hexa) se debe convertir
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 dichos restos al s\'ed\loch\f4 \hich\f4 mbolo equivalente de la base en cuesti\'f3\loch\f4 n (por ejemplo 10=A; 11=B; etc)
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 142
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 **Regla para pasar de hexadecimal a binario**:
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 1. Separar los d\'ed\loch\f4 gitos hexadecimales de modo de poder formar debajo de cada uno de el\hich\af4\dbch\af31505\loch\f4 los un cuarteto binario a dete-
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79    minar de pesos 8-4-2-1. Estos n\'ff\loch\f79 meros pueden escribirse o ser imaginados mentalmente.
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 2. Convertir cada d\'ed\loch\f4 \hich\f4 gito hexadecimal de 0 a F a decimal (ser\'e1\loch\f4 \hich\f4 n iguales del 0 al 9), y Este n\'fa\loch\f4 mero a su vez en un cuarteto
\par \hich\af4\dbch\af31505\loch\f4    de pesos \hich\af4\dbch\af31505\loch\f4 \hich\f4 8-4-2-1 por el m\'e9\loch\f4 todo de las pesas ya visto.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 3. El conjunto de cuartetos as\'cc\loch\f4 \hich\f4  formados constiuir\'e1\loch\f4 n el n}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \loch\af79\dbch\af31505\hich\f79 \'ff\loch\f79 
mero binario buscado.
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 **EJEMPLO**: Convertir a binario el n\'ff\loch\f79 mero hexadecimal A07
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par \hich\af4\dbch\af31505\loch\f4 Paso 1      A   0   7 h
\par \hich\af4\dbch\af31505\loch\f4          *8421 8421 8421d*
\par 
\par \hich\af4\dbch\af31505\loch\f4 Paso 2    1010 0000 0111b           O sea A07H=101000000111b
\par \hich\af4\dbch\af31505\loch\f4       A=10=8+2     7=4+2+1
\par 
\par \hich\af4\dbch\af31505\loch\f4 Ejercicio: Convertir a binario 10h                                             Respuesta: 00010000b
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 #OPERACIONES ARITM\'85\loch\f4 TICAS CON
\par \hich\af4\dbch\af31505\loch\f4  N}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \loch\af4\dbch\af31505\hich\f4 \u8260\'2f}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 
MEROS BINARIOS NATURALES
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ##\'f8\loch\f4 De}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79  qu\'e9\loch\f79 \hich\f79  forma la UAL suma dos n\'ff\loch\f79 meros?
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 En cualquier base num\'e9\loch\f79 \hich\f79 rica pueden definirse las distintas clases de n\'ff\loch\f79 
meros (naturales, negativos, imaginarios, reales,
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 etc.), y todas las operaciones que empleamos en base diez. Estas presentan las mismas propiedades c\hich\af4\dbch\af31505\loch\f4 onocidas en base
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 diez, y pueden aplicarse los mismos algoritmos que conocemos para realizarlas con n\'ff\loch\f79 \hich\f79 meros de varios d\'ed\loch\f79 
gitos.
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 Comenzaremos con la suma de binarios
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 Si bien pueden sumarse manualmente varios n\'ff\loch\f79 meros binarios ordenados uno debajo del otro, int}{\rtlch\fcs1 \af4\afs24 
\ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 eresa especialmente operar dos
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 n\'ff\loch\f79 \hich\f79 meros binarios por vez, como lo hacen las unidades aritm\'e9\loch\f79 
ticas de los microprocesadores y las calculadoras de bolsillo.
\par \hich\af79\dbch\af31505\loch\f79 \hich\f79 *Para sumar en binario se debe tener presente que en la sucesi\'f3\loch\f79 \hich\f79 n de los n\'ff\loch\f79 meros natural}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\hich\af4\dbch\af31505\loch\f4 es: 0,1,10,11 etc. si se suma
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 cero a un n\'ff\loch\f79 mero debe resultar el mismo, y si se suma uno debe obtenerse el siguiente.*
\par \hich\af79\dbch\af31505\loch\f79 \hich\f79 Esto se verifica en las siguientes sumas elementales, que son las variantes que tienen lugar en la suma de dos n\'ff\loch\f79 meros binarios:
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par 
\par \hich\af4\dbch\af31505\loch\f4        \hich\af4\dbch\af31505\loch\f4                                   0    1    0    1    10
\par \hich\af4\dbch\af31505\loch\f4                                         +    +    +    +    +
\par \hich\af4\dbch\af31505\loch\f4                                          0    0    1    1     1                                       
\par \hich\af4\dbch\af31505\loch\f4                                   \hich\af4\dbch\af31505\loch\f4       ---  ---  ---  ---   ---
\par \hich\af4\dbch\af31505\loch\f4                                          0    1    1    10    11
\par 
\par \hich\af4\dbch\af31505\loch\f4 Efectuar    110110100 + 11010110 
\par 
\par \hich\af4\dbch\af31505\loch\f4                                          1 1 1 1   1
\par \hich\af4\dbch\af31505\loch\f4                                          1 1 0 1 1 0 1 0 0
\par \hich\af4\dbch\af31505\loch\f4             \hich\af4\dbch\af31505\loch\f4                             +
\par \hich\af4\dbch\af31505\loch\f4                                            1 1 0 1 0 1 1 0
\par \hich\af4\dbch\af31505\loch\f4                                        --------------------  
\par \hich\af4\dbch\af31505\loch\f4                                        1 0 1 0 0 0 1 0 1 0 
\par \hich\af4\dbch\af31505\loch\f4                                          i h \hich\af4\dbch\af31505\loch\f4 g f e d c b a 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 La suma se ha realizado, posici\'f3\loch\f4 \hich\f4 n por posic\'f3\loch\f4 n, como se detalla:
\par 
\par \hich\af4\dbch\af31505\loch\f4 a.    0 + 0 = 0
\par \hich\af4\dbch\af31505\loch\f4 b.    0 + 1 = 1
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 c.    1 + 1 = 10    ----------    se escribe el 0 y "me llevo 1" de acarreo ("carry") a la posici\'f3\loch\f4 n siguiente
\par \hich\af4\dbch\af31505\loch\f4 d.    1 + 0 + 0 = 1 + 0 = 1
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 e.    1 + 1 = 10    ----------    (\'cc\loch\f4 dem c.)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 f.    1 + 1 + 0 = 10 + 0 = 10     (\'cc\loch\f4 dem c.)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 g.    1 + 0 + 1 = 10              (\'cc\loch\f4 dem c.)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 h.    1 + 1 + 1 = 10 + 1 = 11     se escribe 1 y "me llevo 1" a la posici\'f3\loch\f4 n siguiente.
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ## \'f8\loch\f4 \hich\f4 De qu\'e9\loch\f4  forma se realiza manualm\hich\af4\dbch\af31505\loch\f4 ente una resta de binarios?
\par \hich\af4\dbch\af31505\loch\f4                                                                                                     
\par \hich\af4\dbch\af31505\loch\f4 La tabla de restar binaria es sencilla:                                                             0 0 1   0 1   0
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 1 0 1 1 0 0 1 0 0 1 0
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 0 - 0 = 0\tab \tab \tab \tab \tab \tab \tab \tab       -
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 1 - 0 = 1                                                                             1 1 1 0 0 1 0 1
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 1 - 1 = 0                                                                      -------------------------
\par \hich\af4\dbch\af31505\loch\f4                                                                                                 1 0 0 1 0 1 0 1 1 0 1
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 0 - 1 = 1\tab y se "pide 1" a la siguiente; o sea se hace 10 - 1 = 1
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 143
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 En al resta indicada, toda vez que se 2pide 1" si la sigui\hich\af4\dbch\af31505\loch\f4 \hich\f4 ente posici\'f3\loch\f4 \hich\f4 n del minuendo vale 1, este pasar\'b7\loch\f4  a ser 0, dado que
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 (1-1=0) como se indica el rengl\'f3\loch\f4 n superior.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Si la siguiente es 0 pasar\'b7\loch\f4 \hich\f4  a ser 1 (10-1=), debi\'e9\loch\f4 \hich\f4 ndose nuevamente "pedir 1" a la subsiguiente, que tambi\'e9\loch\f4 \hich\f4 n pasar\'b7\loch\f4  a ser 1
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 si es 0, y asi sucesivamente. Si hay ceros en el minuendo se transformar\'e1\loch\f4 \hich\f4 n en unos, hasta llegar a un 1 que pasar\'b7\loch\f4  a ser 0.
\par 
\par \hich\af4\dbch\af31505\loch\f4 *El procedimiento de "pedir prestado" no se emplea en los circuitos de un computador, por la complejidad y lentitud que
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ocasionar\'cc\loch\f4 a\hich\af4\dbch\af31505\loch\f4 \hich\f4 . En su reemplazo se usa el m\'e9\loch\f4 \hich\f4 todo de **sumar al minuendo el complemento al m\'f3\loch\f4 dulo del sustraendo**,
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 cuyos pasos se indican a continuaci\'f3\loch\f4 \hich\f4 n, y cuya justificaci\'f3\loch\f4 n se trata en detalle en el "**complemento para enteros y 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 punto flotante** que est\'e1\loch\f4  al final de \hich\af4\dbch\af31505\loch\f4 esta unidad.*
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ##\'f8\loch\f4 \hich\f4 C\'f3\loch\f4 mo efectua la UAL una resta sin pedir prestado, mediante una suma?
\par 
\par \hich\af4\dbch\af31505\loch\f4 Realizaremos la misma resta anterior sin pedir prestado, mediante una sola suma que hace la UAL
\par 
\par \hich\af4\dbch\af31505\loch\f4                                               1 1 1       1     1
\par \tab \hich\af4\dbch\af31505\loch\f4 1 0\hich\af4\dbch\af31505\loch\f4  1 1 0 0 1 0 0 1 0                   1 0 1 1 0 0 1 0 0 1 0
\par \hich\af4\dbch\af31505\loch\f4       -                                       +
\par \hich\af4\dbch\af31505\loch\f4         0 0 0 1 1 1 0 0 1 0 1                   1 1 1 0 0 0 1 1 0 1 0        
\par \hich\af4\dbch\af31505\loch\f4        -----------------------
\par \hich\af4\dbch\af31505\loch\f4                                         \hich\af4\dbch\af31505\loch\f4                             1
\par \hich\af4\dbch\af31505\loch\f4                                                ------------------------
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4                                               1 1 0 0 1 0 1 0 1 1 0 1    (El resultado est\'b7\loch\f4  en negrita recuadrado)
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 Regla 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 1. El minuendo se sumar\'b7\hich\af4\dbch\af31505\loch\f4 \hich\f4  sin modificaci\'f3\loch\f4 n.
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 2. Se invierten cada uno de los bits del sustrayendo, y el n\'ff\loch\f79 mero as}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 
\f4\fs24\kerning1\insrsid10114890 \loch\af4\dbch\af31505\hich\f4 \'cc\loch\f4  formado es el segundo operando.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 3. Se escribe un uno para ser sumado en la posici\'f3\loch\f4 n de las unidades.
\par }{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \hich\af79\dbch\af31505\loch\f79 \hich\f79 4. Sumar los tres n\'ff\loch\f79 meros indicados en 1, 2, 3, y descartar el 1 q}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 
\f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 \hich\f4 ue est\'e1\loch\f4  fuera del formato de los n bits que se restan.
\par \hich\af4\dbch\af31505\loch\f4    Los bits restantes a la derecha del bit descartado constituyen el resultado de la resta.
\par 
\par 
\par }{\rtlch\fcs1 \af86\afs24 \ltrch\fcs0 \f86\fs24\kerning1\insrsid10114890 \hich\af86\dbch\af31505\loch\f86 \hich\f86 ##\'b8\loch\f86 \hich\f86 Como se multiplican y dividen manualmente n\'ff\loch\f86 meros binarios naturales?
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par \hich\af4\dbch\af31505\loch\f4 La tabla de multiplicar es muy se\hich\af4\dbch\af31505\loch\f4 \hich\f4 ncilla, al igual que la operatoria manual (que nos se usa en c\'ed\loch\f4 \hich\f4 rculos autom\'e1\loch\f4 ticos): se
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 repite el multiplicando desplazado a la izquierda, conforme a la posici\'f3\loch\f4 n que ocupen los unos del multiplicador. Luego se
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 realiza la suma con los sumados as\'cc\loch\f4  ordenados.
\par 
\par \tab \hich\af4\dbch\af31505\loch\f4 0x0=0\tab \tab \tab 1 1 0 1 1\tab \tab 1 1 1 0 1 1 / 1 1 0             
\par \hich\af4\dbch\af31505\loch\f4         0x1=0\tab \tab \tab x   1 0 1             -   
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4         1x0=0                  -----------              1 1 0         1 0 0 1     La divisi\'f3\loch\f4 n se ha realizado con el
\par \hich\af4\dbch\af31505\loch\f4         1x1=1                   1 1 0 1 1 \hich\af4\dbch\af31505\loch\f4 \hich\f4              -------                    m\'e9\loch\f4 todo de las diferencias sucesivas,
\par \hich\af4\dbch\af31505\loch\f4                             1 1 0 1 1                   0 0 1 0                   siendo que cada sustrayendo se
\par \hich\af4\dbch\af31505\loch\f4                            ---------------            -           \hich\af4\dbch\af31505\loch\f4                 obtiene: multiplicando por 1 al divisor  
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4                           1 0 0 0 0 1 1 1                 0 0 0                   si este \'fa\loch\f4 ltimo es menor o igual que el
\par \tab \tab \tab \tab \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 \hich\f4 ---------                 resto parcial en cuesti\'f3\loch\f4 n, o por 0 si el
\par \hich\af4\dbch\af31505\loch\f4    \hich\af4\dbch\af31505\loch\f4                     \tab                                 0 1 0 1                   mismo es mayor que dicho resto.  
\par \hich\af4\dbch\af31505\loch\f4                                                       -
\par \hich\af4\dbch\af31505\loch\f4                                                           0 0 0
\par \hich\af4\dbch\af31505\loch\f4                        \hich\af4\dbch\af31505\loch\f4                                  ---------
\par \hich\af4\dbch\af31505\loch\f4                                                           1 0 1 1
\par \hich\af4\dbch\af31505\loch\f4                                                       -
\par \hich\af4\dbch\af31505\loch\f4                                                             1 1 0
\par \hich\af4\dbch\af31505\loch\f4                                                         ----------
\par \hich\af4\dbch\af31505\loch\f4                                                              1 0 1
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Es importante se\'f1\loch\f4 alar que cada vez que se multiplica o divide un n}{\rtlch\fcs1 \af79\afs24 \ltrch\fcs0 \f79\fs24\kerning1\insrsid10114890 \loch\af79\dbch\af31505\hich\f79 \'ff\loch\f79 
mero entero binario por la base 10b = 2d al
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 igual que\hich\af4\dbch\af31505\loch\f4  en base diez se agrega o se quita un cero, respectivamente*:
\par 
\par \hich\af4\dbch\af31505\loch\f4 (1011 x 10)b = 10110b                                              (10x10)b = 100b
\par 
\par \hich\af4\dbch\af31505\loch\f4 (10110 x 10 x 10 = 10110 x 100)b = 1011000b (1110/10)b
\par 
\par \hich\af4\dbch\af31505\loch\f4 (101011000 0/1000)b = 1010110b
\par 
\par \hich\af4\dbch\af31505\loch\f4 *Es conveniente compa\hich\af4\dbch\af31505\loch\f4 rar las similitudes de la resta efectuada con restas en base diez, como: (80010010-5349809)d
\par 
\par 
\par 
\par 
\par \loch\af4\dbch\af31505\hich\f4 \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \emdash \loch\f4 \hich\f4 p\'e1\loch\f4 g 145 a 147
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 #CODIFICACION ASCII DE CARACTERES ALFANUMERICOS Y UNICODE#
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ##\'bf\loch\f4 \hich\f4 Que es el c\'f3\loch\f4 digo ASCII?##
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 El codigo ASCII (lease "asqui\'94\hich\af4\dbch\af31505\loch\f4 \hich\f4 ) siglas de American Standar Cod for INformacion INterchange es un c\'f3\loch\f4 digo binario
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ampliamente usado para la transacci\'f3\loch\f4 \hich\f4 n de informaci\'f3\loch\f4 \hich\f4 n, y para codificar los caracteres de un teclado, as\'ed\loch\f4  como los que
\par \hich\af4\dbch\af31505\loch\f4 debe imprimir una impresora en modo text o mostrar una p\hich\af4\dbch\af31505\loch\f4 \hich\f4 antalla. Tambi\'e9\loch\f4 \hich\f4 n es el c\'f3\loch\f4 digo de los archivos de texto.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 En la figura 1.11 aparecen los caracteres alfab\'e9\loch\f4 \hich\f4 tico-num\'e9\loch\f4 rico imprimibles, mas los de las teclas que ordenan movimiento
\par \hich\af4\dbch\af31505\loch\f4  del cursor que antes eran los del carro de una maquina de escribir (**SP** abre\hich\af4\dbch\af31505\loch\f4 viatura de "space"; la tecla de retorno del carro y
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 pasar a un nuevo rengl\'f3\loch\f4 n, **CR**, siglas de "carry return", que aparece en los teclados actuales como \loch\af4\dbch\af31505\hich\f4 \u9496\'2b\hich\af4\dbch\af31505\loch\f4 "Enter>"; la de "back space" 

\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **BS**)\'b9\loch\f4 , mas otros relacionados con las teletipos(**STX** -Star of Tex\hich\af4\dbch\af31505\loch\f4 \hich\f4 t- **EOT** -End of Transmisi\'f3\loch\f4 \hich\f4 n- ect)\'b9.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Suman 128=2^7 caracteres y otros a codificar un binario por lo que bastar\'ed\loch\f4 an 7bit para formar igual numero de combinaciones
\par \hich\af4\dbch\af31505\loch\f4 binarios distintas, aunque se usan 8 bits (el primer bit de todas las combinaciones del ASCII\hich\af4\dbch\af31505\loch\f4 \hich\f4  est\'e1\loch\f4 \hich\f4 ndar es cero, pudi\'e9\loch\f4 ndose usar
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 para paridad u otros fines). cON 8 bitsresultan 2^8 = 256 combinaciones, 128 por ascii est\'e1\loch\f4 ndar y 128 por ascii extendido.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Por ejemplo, las may\'fa\loch\f4 \hich\f4 sculas de la A hasta la Z se codifican seg\'fa\loch\f4 \hich\f4 n una secesi\'f3\loch\f4 \hich\f4 n ordenada de n\'fa\loch\f4 meros\hich\af4\dbch\af31505\loch\f4 \hich\f4 
 binarios (que permite real8izar ordenaciones alfab\'e9\loch\f4 ticas)
\par 
\par \hich\af4\dbch\af31505\loch\f4  **A** 01000001 =41h =65d;               **0** 00110000 =30h= 48d;             **SP* 00100000 =20h =32d;
\par 
\par \hich\af4\dbch\af31505\loch\f4 **a** 01100001 = 61h =97d;               **1** 00110001 =31H = 49d;     
\par 
\par \hich\af4\dbch\af31505\loch\f4 **B** 01000010 =\hich\af4\dbch\af31505\loch\f4 42h =66d;                **2** 00110010 =32h = 50d;
\par 
\par \hich\af4\dbch\af31505\loch\f4 **b** 00110010= 62d =98d;                       ....
\par 
\par \hich\af4\dbch\af31505\loch\f4 **Z** 01011010 = 5Ah = 90d;             **9** 00111001 = 39h = 547d
\par 
\par \hich\af4\dbch\af31505\loch\f4 **z** 01111010 = 7Ah =90d
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Arriba aparecen combinaciones binarias del c\'f3\hich\af4\dbch\af31505\loch\f4 \hich\f4 digo ACII cuando se pulsa la tecla con el car\'e1\loch\f4 \hich\f4 cter indicado. As\'ed\loch\f4  cada vez
\par \hich\af4\dbch\af31505\loch\f4 que se pulsa **A** queda 01000001 en una celda de memoria: Para poder ordenar alfabeticamenre las letras, la **B** es el 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 numero binario siguiente 01000010 y as\'ed\loch\f4  sucesivamente se aum\hich\af4\dbch\af31505\loch\f4 enta uno hasta la **Z** (01011010=.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Al lado de cada combinaci\'f3\loch\f4 n binaria aparecen su valores equivalentes en hexa y end decimal, usados en tablas AsCII.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Una may\'fa\loch\f4 \hich\f4 scula se diferencia de su min\'fa\loch\f4 scula en un solo bit (el tercero desde la izquierda) lo cual se us\hich\af4\dbch\af31505\loch\f4 a en ciertos
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 programas para no diferenciar un nombre escrito con mayusculas o min\'fa\loch\f4 scula, dado que los 7 bits restantes permiten
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 determinar la tecla de la letra tipeada sin importar si el car\'e1\loch\f4 cter es el de arriba o el de abajo de dicha tecla.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Los d\'ed\loch\f4 gitos de\hich\af4\dbch\af31505\loch\f4 \hich\f4 l 0 al 9 empiezan con 0011, y el segundo cuarteto con pesos 8-4-2-1 indicados determina que d\'ed\loch\f4 gito es.
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 Si se tipea 109XP en memoria queda an ASCII como: 00110001/1 00110000/0 00111001/9 01010111/X 01010000/P
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 As\'ed\loch\f4  mismo, si a la plaqueta de video le llegan\hich\af4\dbch\af31505\loch\f4  en orden esas 3 combinaciones binarias ASCII, en pantalla se vera 109XP
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Cuando se tipea Alt64 para que aparezca @, dado que 64d = 01000000b este ser\'e1\loch\f4 \hich\f4  el c\'f3\loch\f4 digo ASCII de @.
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ![imagen1](/Figura A1-11.png)
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 [^] Una tecla como **SHIFT** es una orden intern\hich\af4\dbch\af31505\loch\f4 \hich\f4 a para el teclado a fin de que genere una may\'fa\loch\f4 scula o el simbolo superior de los que
\par \hich\af4\dbch\af31505\loch\f4 aparecen en una tecla, por lo que no se codifica en ASCII[^]
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 La tabla anterior es una forma compacta de mostrar la tabla con el c\'f3\loch\f4 digo ASCII expresado en hexa, donde cada\hich\af4\dbch\af31505\loch\f4 \hich\f4  car\'e1\loch\f4 cter
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 tiene dos coordenadas que escritas consecutivamente conforman el equivalente hexa del c\'f3\loch\f4 digo binario.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 As\'ed\loch\f4 \hich\f4  para hallar el c\'f3\loch\f4 \hich\f4 digo ASCII de un car\'e1\loch\f4 \hich\f4 cter como la **A**, \'e9\loch\f4 sta tiene por coordenadas **4** ( horizontal) y **1** (vertical), que
\par \hich\af4\dbch\af31505\loch\f4 forman 41h= 01000001 Del mismo modo **SP* tiene coordenadas **2** y **0** que forman 20h =00100000;
\par 
\par \hich\af4\dbch\af31505\loch\f4 **ASCII extendido**
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Se se tipea Atl164 para obtener **\'f1\loch\f4 \hich\f4 * dado que 164d=10100100 b \'e9\loch\f4 \hich\f4 ste ser\'e1\loch\f4 \hich\f4  el c\'f3\loch\f4 \hich\f4 digo ASCII de la \'f1\loch\f4 . 
\par \hich\af4\dbch\af31505\loch\f4 E. bit extremo izquierdo es uno. Esto\hich\af4\dbch\af31505\loch\f4 \hich\f4  caracteriza a los 128 combinaciones de cualquier ASCII extendido. que puede contener la \'f1\loch\f4 , 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 las vocales con acento, y otros s\'ed\loch\f4 \hich\f4 mbolos usados en otras lenguas latinas, seg\'fa\loch\f4 n lo establezca la empresa que lo imponga.
\par 
\par \hich\af4\dbch\af31505\loch\f4 **EJERCICIO**: Visualizar con el Debug co\hich\af4\dbch\af31505\loch\f4 mo quedan en memoria codificados en aaASCII, los caracteres de Ana3/3/80
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Pasos a efectuar a partir del s\'ed\loch\f4 mbolo **C:/>** del DOS:
\par 
\par \hich\af4\dbch\af31505\loch\f4 1. **C:\\>** *COPY CON MARIO.COD* \loch\af4\dbch\af31505\hich\f4 \u9496\'2b\hich\af4\dbch\af31505\loch\f4 \hich\f4 (en it\'e1\loch\f4 lica aparece lo que se debe escribir, y en negrita lo que escribe DOS)
\par \hich\af4\dbch\af31505\loch\f4 *Ana 3/6/80 ^\hich\af4\dbch\af31505\loch\f4  Z*                (^Z se usa para cerrar el archivo, siendo que^se logra pulsando la tecla Ctrl)
\par 
\par \hich\af4\dbch\af31505\loch\f4               **1 ARCHIVO(s) COPIADO(s)
\par 
\par \hich\af4\dbch\af31505\loch\f4 2.**C:\\>** *DEBUG MARIO.COD*\loch\af4\dbch\af31505\hich\f4 \u9496\'2b\hich\af4\dbch\af31505\loch\f4   (Para poder ver en memoria mediante el Debug el archivo tipeado)
\par \hich\af4\dbch\af31505\loch\f4         -           \hich\af4\dbch\af31505\loch\f4 \hich\f4            ( Gui\'f3\loch\f4 n titilante que indica que el Debug esta esperando una orden)
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 3.  *E100*\loch\af4\dbch\af31505\hich\f4 \u9496\'2b\hich\af4\dbch\af31505\loch\f4                 ( Orden de leer la memoria a partir de 0100, donde quedan los archivos)
\par 
\par \hich\af4\dbch\af31505\loch\f4    **309D: 0100               41.  6C.    6I.  20.       33.  2F.  36.   2F.
\par \hich\af4\dbch\af31505\loch\f4      309D: 0108               39   30. \loch\af4\dbch\af31505\hich\f4 \u9496\'2b\hich\af4\dbch\af31505\loch\f4 **
\par 
\par \hich\af4\dbch\af31505\loch\f4              
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 A partir del 41 se debe pulsar la barra espaciadora parqa obtener el valor siguiente de (6C), as\'ed\loch\f4  de seguido (como se hizo
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 expl\'ed\loch\f4 \hich\f4 cito al describir el uso del Debug) tantas veces como car\'e1\hich\af4\dbch\af31505\loch\f4 cter, espacios y "entre" se hayan pulsado en el teclado.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Se verifica que lo n\'fa\loch\f4 meros hexadecimales 41, 6C, etc corresponden a los caracteres tipeados (Ana 3/6/80)
\par \hich\af4\dbch\af31505\loch\f4 El lector debe realizar esta practica tipeando otros caracteres distintos que Ana 3/6/80 y lue\hich\af4\dbch\af31505\loch\f4 \hich\f4 go verificar que loa c\'f3\loch\f4 digos
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 que se leen en memoria correspondan a la codificaci\'f3\loch\f4 \hich\f4 n ASCII seg\'fa\loch\f4 n la tabla dada.
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ##\'bf\loch\f4 Que es el Unicode?##
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Hacia 1990 se busco definir un sistema de codificaci\'f3\loch\f4 \hich\f4 n universal que permitiese la incorporaci\'f3\loch\f4 n de los caracteres(graf\hich\af4\dbch\af31505\loch\f4 os)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 de todas las lenguas escritas del mundo, tanto actuales como pasadas, as\'ed\loch\f4 \hich\f4  como los s\'ed\loch\f4 \hich\f4 mbolos utilizados en matem\'e1\loch\f4 ticas  otros.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 El sistema deber\'ed\loch\f4 \hich\f4 a ser ademas extensibles, de forma que pudieran a\'f1\loch\f4 adirse nuevos tipos en el futuro.
\par \hich\af4\dbch\af31505\loch\f4 Por un lado el **UCS* ("u\hich\af4\dbch\af31505\loch\f4 niversal character set")
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 , desarrollado por la organizaci\'f3\loch\f4 \hich\f4 n Internacional de Estandarizaci\'f3\loch\f4 \hich\f4 
n (ISO); y por otro el denominado **Unicode** impulsado por empresas como Microsoft (integrante del Unicode Consortium), que hab\'ed\loch\f4 a incorporado en sus sistemas Window\hich\af4\dbch\af31505\loch\f4 s 9x un juego
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4  de caracteres adaptando la mayor\'ed\loch\f4 a de alfabetos occidentales.
\par \hich\af4\dbch\af31505\loch\f4 Posteriormente implemento Unicode en sus sistemas NT y sucesores Aunque el desarrollo inicial de ambos sistemas fue independiente,
\par \hich\af4\dbch\af31505\loch\f4 luego convergieron, y el sistema **Unicode** se \hich\af4\dbch\af31505\loch\f4 \hich\f4 convirti\'f3\loch\f4  en un subconjunto de sistemas **UCS**
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Unicode es una norma internacional de codificaci\'f3\loch\f4 \hich\f4 n de car\'e1\loch\f4 \hich\f4 cter. La primera versi\'f3\loch\f4 \hich\f4 n(1991), usaba una codificaci\'f3\loch\f4 n de 16bita
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 por lo que pod\'ed\loch\f4 a codificar 65.536 caracteres.Actualmente se representa con tres tipo\hich\af4\dbch\af31505\loch\f4 \hich\f4 s de codificaci\'f3\loch\f4 n*UTF-8-_, _*UTD-16*_ e
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 _*UTD-32_*) seg\'fa\loch\f4 \hich\f4 n que use 8,16 o 32 bits para identificar cada car\'e1\loch\f4 \hich\f4 cter. Unicode 4.1, codifica cerca de un mill\'f3\loch\f4 
n de caracteres que cubren los principales idiomas escritos en el mundo. Los primeros 128 caracteres del\hich\af4\dbch\af31505\loch\f4 \hich\f4  ASCII y tienen su mismo valor. Puesto que ASCII usa 7 bits por car\'e1\loch\f4 \hich\f4 
cter es inadecuado para manejar texto multilenguaje, Unicode aporto un formato de 16 bits que extiende las ventajas del ASCII al texto miltiling\'fc\loch\f4 e.
\par \hich\af4\dbch\af31505\loch\f4 Unicode se ha convertido en la codificac\hich\af4\dbch\af31505\loch\f4 \hich\f4 i\'f3\loch\f4 \hich\f4 n dominante para el procesamiento de texto. Cubre idiomas de Am\'e9\loch\f4 \hich\f4 rica, Europa, \'c1\loch\f4 \hich\f4 
frica, India, Asia y los s\'ed\loch\f4 \hich\f4 mbolos t\'e9\loch\f4 cnicos.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Unicode proporciona un numero \'fa\loch\f4 \hich\f4 nico para cada car\'e1\loch\f4 cter, no importa cual sea la plataforma, el programa o el idioma que trate. Un nu\hich\af4\dbch\af31505\loch\f4 
mero hexadecimal y un prefijo U, por ejemplo,**u+0041** representa la **A** en 16 bits. Unicode ha sido adoptado por Apple, El HP, la IBM, Microsoft, Oracle, SUN, Sybase, Unisys entre otros. Es usado en java
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ECMAScript (Javascrpit); XML, Tambi\'e9\hich\af4\dbch\af31505\loch\f4 n por muchos sistemas operativos, por los browsers actuales, y muchos otros productos.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 LA aparici\'f3\loch\f4 \hich\f4 n de Unicode, y la disponibilidad de las herramientas que lo apoyan se encuentran entre las tendencias globales recientes mas significativas de la tecnolog\'ed\loch\f4 a 
\hich\af4\dbch\af31505\loch\f4 \hich\f4 del software. Permite que los datos sean transportados a trav\'e9\loch\f4 \hich\f4 s de muchos sistemas distintos sin que sufran da\'f1\loch\f4 os, y que un producto de software o un sitio web
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 pueda orientarse a m\'fa\loch\f4 \hich\f4 ltiples plataformas idiomas y pa\'ed\loch\f4 \hich\f4 ses, sin necesidad de redise\'f1\loch\f4 arlo, Una ver\hich\af4\dbch\af31505\loch\f4 \hich\f4 si\'f3\loch\f4 
n de un producto se puede utilizar por todo el mundo. No
\par \hich\af4\dbch\af31505\loch\f4 son necesarios lanzamientos separados para mercados regionales. UN texto en cualquier lengua se puede intercambiar por todo el mundo.
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 **EJERCITACION**
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 1.Escribir los sucesivos n\'fa\loch\f4 meros en hexade\hich\af4\dbch\af31505\loch\f4 cimales del 1048h y 1070h
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 2.Conforme al ejercicio anterior, indicar cu\'e1\loch\f4 \hich\f4 l es el siguiente de los siguientes n\'fa\loch\f4 meros hexadecimales: FFF, 2ABF, 2B99, 1FF, ABCD, C0D0, A0F, 999
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 3.\'bf\loch\f4 De cuantos bytes consta el numero hexadecimal 003B, y que numero binario y dec\hich\af4\dbch\af31505\loch\f4 imal es?
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 4. Dado el numero10 en base dos y el numero 10 en base diecis\'e9\loch\f4 \hich\f4 is \'bf\loch\f4 \hich\f4 que n\'fa\loch\f4 meros son en base diez?
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 5 Generalizar la pregunta anterior dado el numero 10en base X \'bf\loch\f4 que numero es en base 10?
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 6 Dado el numero binario 1111111, halar una forma r\'e1\loch\f4 pida de\hich\af4\dbch\af31505\loch\f4 
 pasarlo a decimal sin tener que halla el peso decimal de cada bit y luego sumar los pesos. Generalizar el procedimiento hallado.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 7.Determinar en la expresi\'f3\loch\f4 n 2^n que sucede con su calor, cada vez que **n** aumenta uno y calcular el numero de combinacione\hich\af4\dbch\af31505\loch\f4 
s binarias distintas que pueden formarse con n=10 y n=11 tener Presente la figura1.4
\par 
\par \hich\af4\dbch\af31505\loch\f4 8. Convertir a base doce el numero decimal 140.
\par 
\par \hich\af4\dbch\af31505\loch\f4 9.Convertir a hexadecimal el numero 11000000000001b luego convertir este numero binario a octal
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 10.Los n\'fa\hich\af4\dbch\af31505\loch\f4 meros de las direcciones de una zona de memoria un computador van de 0000 a FFFF. Determinar a cuantas posiciones de memoria existen combinaciones.
\par 
\par \hich\af4\dbch\af31505\loch\f4 11. Se tiene una memoria con 2^20 posiciones y se quiere identificar cada una con un numero binario distint\hich\af4\dbch\af31505\loch\f4 o.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Expresar un binario la primera, segunda, ante ultima y ultima direcci\'f3\loch\f4 n de dicha memoria.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Indicar en decimal cuantas posiciones son, cuantos s\'ed\loch\f4 \hich\f4 mbolos hexadecimales se necesitan para codificar cualquier posici\'f3\loch\f4 \hich\f4 n. Indicar en hexa el valor de la posici\'f3\loch\f4 
n c\hich\af4\dbch\af31505\loch\f4 ero y ultima
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 12\'bf\loch\f4 \hich\f4  Cuantos bits hacen falta para representar n\'fa\loch\f4 \hich\f4 meros decimales entre 0 y 999999d?\'bf\loch\f4 \hich\f4  Cuantos d\'ed\loch\f4 gitos hexadecimales?
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 13. Los registros de un 386, 486, pentium tienen 32 bits.\'bf\loch\f4  Cual es el mayor y menor numero natural que se representan?
\par 
\par \hich\af4\dbch\af31505\loch\f4 14. Da\hich\af4\dbch\af31505\loch\f4 \hich\f4 dos los n\'fa\loch\f4 meros naturales 180 y 40
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4  a)Representar en C\'f3\loch\f4 digo ASCII
\par \hich\af4\dbch\af31505\loch\f4  b) Representar en binarios y sumarlos en formato 8 y 16
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4  c) Representarlos en binarios y restarlos por el m\'e9\loch\f4 todo del complemento a la base en formato 8 y 16.
\par 
\par \hich\af4\dbch\af31505\loch\f4 15. Siendo P=180, Q= 40 efectu\hich\af4\dbch\af31505\loch\f4 \hich\f4 ar en formato 16 la operaci\'f3\loch\f4 n P+P-Q. Verificar que el resultado sea correcto.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 16. Comparar en base diez y dos que pasa cuando se multiplica por 10 y por 100. generalizar para la divisi\'f3\loch\f4 n.
\par 
\par 
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid12666282 \hich\af4\dbch\af31505\loch\f4 **RESPUESTAS  PARTE DE LOS}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4  EJERCICIOS**
\par 
\par \hich\af4\dbch\af31505\loch\f4 3. 2 BYTES;  003Bh=00000\hich\af4\dbch\af31505\loch\f4 00000111001b = 59d
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 4. dos y diecis\'e9\loch\f4 is
\par 
\par \hich\af4\dbch\af31505\loch\f4 5. X
\par 
\par \hich\af4\dbch\af31505\loch\f4 1. Conviene tomar el numero siguiente 1000000= 128d y restarle 1
\par 
\par \hich\af4\dbch\af31505\loch\f4 9. 3001h = 30001o    10. 65,536
\par 
\par \hich\af4\dbch\af31505\loch\f4 11 00000000000000000000     00000000000000000001           11111111111111111110        11111111111111111111
\par \hich\af4\dbch\af31505\loch\f4    
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4     1.048.576; 5 d\'ed\loch\f4 gitos hexa, de 00000 a FFFFF
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 12. 20 bits y 5 d\'ed\loch\f4 gitos hexa
\par 
\par \hich\af4\dbch\af31505\loch\f4 13. 2^32= 2^10 x2^10 x2^10 x2^2= 1024x 1024x 1024x 4 > 4000.000.000
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 _______________________ P\'e1\loch\f4 gina 148 - 151
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\wrapdefault\faauto\rin0\lin0\itap0\pararsid14181976 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 
\f4\fs24\kerning1\insrsid14181976\charrsid14181976 \hich\af4\dbch\af31505\loch\f4 #EJERCICIO SISTEMATIZADOR DE CODIGOS
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *En un teclado se ha tipeado 3Z, y la combinaci\'f3\loch\f4 \hich\f4 
n binaria que resulta en memoria es interpretada por 3 programas crean con fines distintos que se indican, siendo que el significado que cada programa asigna a esa combinaci\'f3\loch\f4 n debe aparecer pantalla en carac\hich\af4\dbch\af31505\loch\f4 t
\hich\af4\dbch\af31505\loch\f4 \hich\f4 eres alfab\'e9\loch\f4 \hich\f4 ticos y num\'e9\loch\f4 \hich\f4 ricos (alfa-num\'e9\loch\f4 ricos), indicar en cada caso los pasos a seguir para que ello suced **
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *1)Si dicha combinaci\'f3\loch\f4 n es interpretada por el programa Debug que convierte de binario a hexa y viceversa.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *2)Si 3Z es tipeado mientras se est\'e1\loch\f4  es\hich\af4\dbch\af31505\loch\f4 cribiendo texto en el programa Word, y el mismo se visualiza en pantalla.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *3)Si un programa que esta operando con n\'fa\loch\f4 \hich\f4 meros naturales (magnitudes) interpreta la combinaci\'f3\loch\f4 \hich\f4 n citada, independien temente de c\'f3\loch\f4 mo fue generada.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Aclaraci\'f3\loch\f4 n: como se detalla en la \hich\af4\dbch\af31505\loch\f4 \hich\f4 Unidad 2 de esta obra, el teclado no codifica en binario ASCII cada tecla tipeada. \'a3\loch\f4 \hich\f4 
 cambio la plaqueta de video se encarga de convertir cada c\'f3\loch\f4 \hich\f4 digo ASCII que le llega en el car\'e1\loch\f4 \hich\f4 cter o acci\'f3\loch\f4 n correspondiente"
\par \hich\af4\dbch\af31505\loch\f4 *Para empezar, los dos caracteres tipeados (3Z)\hich\af4\dbch\af31505\loch\f4 \hich\f4 , en memoria quedar\'e1\loch\f4 \hich\f4 n codificados en ASCII como 00110011 0101 lOlo seg\'fa\loch\f4 
n se desprende de la tabla ASCII de la figura Al.l 1 (3 = 33 y A = 5A).
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *1)El Debug est\'e1\loch\f4 \hich\f4  preparado para \'93\loch\f4 \hich\f4 ver* -con vistas a que aparezca en hexa en pantalla- cada combinaci\'f3\loch\f4 n binaria di\hich\af4\dbch\af31505\loch\f4 \hich\f4 
vidida en cuartetos con pesos 8-4-2-1, que deber\'e1\loch\f4 \hich\f4  traducir en d\'ed\loch\f4 \hich\f4 gitos hexadecimales (secci\'f3\loch\f4 n Al.3):
\par \hich\af4\dbch\af31505\loch\f4 *842 1 8421 842 1 842 t
\par \hich\af4\dbch\af31505\loch\f4 *0011 0011 0101 1010
\par \hich\af4\dbch\af31505\loch\f4 *3\tab 3\tab \hich\f4 5 A estos 4 s\'ed\loch\f4 \hich\f4 mbolos son los que deben aparecer en la pantalla, para lo cual el Debug deber\'e1\loch\f4  generar
\par \hich\af4\dbch\af31505\loch\f4 *en m\hich\af4\dbch\af31505\loch\f4 \hich\f4 emoria sus correspondientes c\'f3\loch\f4 \hich\f4 digos ASCII, que deber\'e1\loch\f4 n llegar luego a la plaqueta de video.
\par \hich\af4\dbch\af31505\loch\f4 *Ellos son: 000110011 (3) 000110011(3) 00110101(5) 01000001 (A) que en hexason 33 33 35 41 (Tabla Al.l 1)
\par \hich\af4\dbch\af31505\loch\f4 *2)El Word trabaja directamente con los caracteres ASCII q\hich\af4\dbch\af31505\loch\f4 \hich\f4 ue han sido tipeados, por lo que al tipear 3Z simplemente sus c\'f3\loch\f4 \hich\f4 
digos ASCII (00110011 y 01011010) pasan a la plaqueta de video, que los convertir\'e1\loch\f4  en pantalla en los caracteres 3Z. Igualmente, si dichos caracteres forman parte de un archivo del Word que s\hich\af4\dbch\af31505\loch\f4 e
\hich\af4\dbch\af31505\loch\f4 \hich\f4  abri\'f3\loch\f4 \hich\f4 , sus c\'f3\loch\f4 \hich\f4 digos ASCII pasan a dicha pla\'ac\loch\f4 \hich\f4 queta, y as\'ed\loch\f4  son visualizados en pantalla.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Dado que el programa opera con n\'fa\loch\f4 \hich\f4 meros naturales, cuando interpreta la combinaci\'f3\loch\f4 n 00110011 01011010 -que ocupa dos posiciones sucesivas de memoria (una por byte)- para
\hich\af4\dbch\af31505\loch\f4 \hich\f4  que se imprima en pantalla como un n\'fa\loch\f4 \hich\f4 mero decimal la interpretar\'e1\loch\f4  con los pesos siguientes:
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *2.Representar c\'f3\loch\f4 \hich\f4 mo quedan en memoria los caracteres tipeados, supuestos escritos a partir de la direcci\'f3\loch\f4 n 0100.
\par \hich\af4\dbch\af31505\loch\f4 *3.Si posteriormente el programador llama al progr\hich\af4\dbch\af31505\loch\f4 \hich\f4 ama compilador del lenguaje \'93\loch\f4 \hich\f4 X\'94\loch\f4 \hich\f4 , indicar c\'f3\loch\f4 mo el compilador deja 
\par \hich\af4\dbch\af31505\loch\f4 *32783 16384 8192 4096 2048\tab 1024 512 128 16   2 1
\par \hich\af4\dbch\af31505\loch\f4 *0 0 1. 1                0  0          1   0   1 1 0b = 13146d
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Para que estos 5 d\'ed\loch\f4 \hich\f4 gitos decimales aparezcan en pantalla, el programa deber\'e1\hich\af4\dbch\af31505\loch\f4 \hich\f4  generar en memoria sus c\'f3\loch\f4 \hich\f4 digos ASCII que llegar\'e1
\loch\f4 n a la plaqueta de video: 00110001 (1) 00110011 (3) 00110001 (1) 00110100(4) 00110110(6).
\par \hich\af4\dbch\af31505\loch\f4 #EJERCICIO INTEGRADOR DE CONOCIMIENTOS
\par \hich\af4\dbch\af31505\loch\f4 *Un programador ha desarrollado para variables (datos) que son magnitudes, un \hich\af4\dbch\af31505\loch\f4 \hich\f4 programa en un cierto lenguaje \'93\loch\f4 \hich\f4 X\'94\loch\f4 \hich\f4 
 de alto nivel, cuyas sentencias  tipe\'f3\loch\f4 \hich\f4  desd\'e9\loch\f4 \hich\f4  el teclado de un computador. Para una porci\'f3\loch\f4 \hich\f4 n de dicho programa ha tipeado la sentencia que m\'e1\loch\f4 
s abajo se indica. Se supone que luego de ella, se puede escribir el valor de las\hich\af4\dbch\af31505\loch\f4  \hich\af4\dbch\af31505\loch\f4 variables a operar.
\par \hich\af4\dbch\af31505\loch\f4 *Variable:
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *MAGNITUDES J (este s\'ed\loch\f4 \hich\f4 mbolo J aparece para indicar que se puls\'f3\loch\f4 \hich\f4  \'93\loch\f4 \hich\f4 Enter\'94\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 *R = P + Q- TJ (sentencia en alto nivel, en el lenguaje X)
\par \hich\af4\dbch\af31505\loch\f4 *P= 130 Q = 4103 T = 4 J
\par \hich\af4\dbch\af31505\loch\f4 *\tab T\tab T\tab \hich\f4  (las flechas se\'f1\hich\af4\dbch\af31505\loch\f4 alan que se hizo un espacio mediante la barra espadadora)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *traducida en memoria la sentencia R = P + Q - T en la secuencia de instrucciones en c\'f3\loch\f4 \hich\f4 digo de m\'e1\loch\f4 \hich\f4 quina, para un procesador de Intel o AMD. Para tal fin usar los c\'f3
\loch\f4 digos definidos en la figura 1.15, \hich\af4\dbch\af31505\loch\f4 \hich\f4 y escribirlos en memoria a partir de la direcci\'f3\loch\f4 
n 03AC. Asignar a las variables (datos) R, P, Q y T las direcciones A23E, A240, A242, y A244 respectivamente. Para cada variable usar 2 bytes.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *4.Una vez que todo el programa en el lenguaje \'93\loch\f4 \hich\f4 X\'94\loch\f4  fue traducido \hich\af4\dbch\af31505\loch\f4 \hich\f4 a c\'f3\loch\f4 \hich\f4 digo de m\'e1\loch\f4 quina, se ordena ejecutarlo. 

\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Designamos \'93\loch\f4 \hich\f4 sentencia" a cada orden (instrucci\'f3\loch\f4 \hich\f4 n) que constituye cada \'93\loch\f4 \hich\f4 l\'ed\loch\f4 \hich\f4 nea\'94\loch\f4 
 escrita de un programa expresado en un lenguaje de alto nivel (Pascal, C, Basic, Cobol, Java, etc.), la cual si se tipea quedan codif\hich\af4\dbch\af31505\loch\f4 \hich\f4 icados en ASCII los caracteres que la compone11 Reservamos la palabra \'93
\loch\f4 \hich\f4 instrucci\'f3\loch\f4 \hich\f4 n\'94\loch\f4 \hich\f4  o sea \'93\loch\f4 \hich\f4 c\'f3\loch\f4 \hich\f4 digo de m\'e1\loch\f4 \hich\f4 quina\'94\loch\f4 \hich\f4  (a veces llamado \'93\loch\f4 \hich\f4 c\'f3\loch\f4 \hich\f4 digo\'94
\loch\f4 \hich\f4  a secas) a las \'f3\loch\f4 rdenes que puede ejecutar una UCP (microprocesador), siendo que cada sentencia debe ser traducida en un\hich\af4\dbch\af31505\loch\f4 a\hich\af4\dbch\af31505\loch\f4  secuencia de estas instrucciones.
\par \hich\af4\dbch\af31505\loch\f4 Indicar, suponiendo que se ejecute la secuencia de instrucciones traducida en el unto anterior, para las intrucciones
\par \hich\af4\dbch\af31505\loch\f4 que ordenan sumar o restar, como la UAL realiza estas opreraciones con los datos correspodientes, y com\hich\af4\dbch\af31505\loch\f4 o queda el registro
\par \hich\af4\dbch\af31505\loch\f4 AX luego de que se ejecuta cada una de las intrucciones de dicha secuencia, Tambien pasar a base diez cada resultado binario 
\par \hich\af4\dbch\af31505\loch\f4 que esta en AX, verificando que sea el valor esperado.
\par 
\par \hich\af4\dbch\af31505\loch\f4 5. Representar luego de ejecutar la intruccionI como q\hich\af4\dbch\af31505\loch\f4 ueda en memoria el resultado asignado a la variable R,
\par \hich\af4\dbch\af31505\loch\f4 conforme ordena dicho instruccion.
\par \hich\af4\dbch\af31505\loch\f4 6.Supondinedo que luego de la sentencia R=P+Q-T siga la sentencia **PRINT "R"=R** (o sea imprimir el decimal el valor R hallado),
\par \hich\af4\dbch\af31505\loch\f4 el compildor la traducira a varias i\hich\af4\dbch\af31505\loch\f4 \hich\f4 ntruciones en c\'f3\loch\f4 \hich\f4 digo de m\'f1\loch\f4 aquina una de las cuales llamara a una subrutina de impresion. Si esta ordena
\par \hich\af4\dbch\af31505\loch\f4 que la impresora opere en modo texto, iunidcar como debe quedar codificada en memoria desde la direccion 7100, la informacion a enviar a la
\par \hich\af4\dbch\af31505\loch\f4 impresora, p\hich\af4\dbch\af31505\loch\f4 ara que imprima en decimal el valor R.
\par 
\par \hich\af4\dbch\af31505\loch\f4 *Esre ejercicio integra de forma concreta, los 4 pasos de un proceso de datos:entrada, memorixzacion, proceso y salida*
\par 
\par \hich\af4\dbch\af31505\loch\f4 1. Como se establecio en A1.5 el ratar el codigo ASCII, en una operacion de entrada desde el te\hich\af4\dbch\af31505\loch\f4 clado, los sucesivos
\par \hich\af4\dbch\af31505\loch\f4 caracteres tipeados(sean de untxto para un procesador de textos o de un prorama en alto nuvel) quedan almcenados en binario, en posiciones 
\par \hich\af4\dbch\af31505\loch\f4 sucesivas de memoria (digra A1.15) en este caso desde la 0100, codificados en ASCII.Para mas cl\hich\af4\dbch\af31505\loch\f4 aridad, al lado dse cada casillero aparece el 
\par \hich\af4\dbch\af31505\loch\f4 caracter codificado, y su codigo ASCII en hexa, segun la tabla (fig A1.11).
\par \hich\af4\dbch\af31505\loch\f4 2. Cualquier programa en alto nivel se encunetra codificado en ASCII al igual que una carta, o cualquier texto, es una secucion de ca\hich\af4\dbch\af31505\loch\f4 racteres aislados, 
\par \hich\af4\dbch\af31505\loch\f4 codificsados individualmente en combinaciones de 8 bits que representan.
\par 
\par \hich\af4\dbch\af31505\loch\f4 Si bien el codigo ASCII es un codigo binario, la UCP no puede ejecutar ningun programa en lenguaje de alto nivel, cualquiera sea este lenguaje; del msimo 
\par \hich\af4\dbch\af31505\loch\f4 modo que la UCP no puede ejecutar una carta o una nota que hayamos escrito y que haya quedado en memoria
\par 
\par \hich\af4\dbch\af31505\loch\f4 UN programa en alto nuivel es un texto codificado en ASCIIm compuesto por ordenes (sentencias), que debe ser escrito siguiendo
\par \hich\af4\dbch\af31505\loch\f4 estrictamnree una sinta\hich\af4\dbch\af31505\loch\f4 xis especificada, para quie pueda ser reconocida como un prograama por el programa traductor
\par \hich\af4\dbch\af31505\loch\f4 (**compilador**). El se encarga de traducir cada sentenia en una secuencia de inrcuciones de maquina apropiadas al micropocesador (UCP) que lo ca a ejecutar.
\par 
\par \hich\af4\dbch\af31505\loch\f4 Del \hich\af4\dbch\af31505\loch\f4 archivo del disco rigido donde se encunetrea el compilador de un leguaje X, este pasa a memoria. AL ordenar, compilar, los datos a procesar son los caraceres
\par \hich\af4\dbch\af31505\loch\f4 codificadosen binario ASCII, que representan el progrma en alto niuvel para el programa compilador\hich\af4\dbch\af31505\loch\f4 . LUego de ser ejecuitado(por la UCP) el programa compilador dejara
\par \hich\af4\dbch\af31505\loch\f4 en memoria, traducido a codigo maquina( em este caso para el microprocesador de intel), el programa que originariamente estaba en alto nivel. Esto es, el compilador
\par \hich\af4\dbch\af31505\loch\f4 s un programa cuto"inpu\hich\af4\dbch\af31505\loch\f4 t" (datos) ES UN RPGRAMA EN ALTO NIVEL CODIFICADO EN ASCII(unos y ceros), y cuyo "output"(resultado) es el programa que fue su"inpuy", pero en el
\par \hich\af4\dbch\af31505\loch\f4 codigo de maquina (unos y ceros),para quie pueda ser ejecutafdo por un microprocesador especiufico.
\par 
\par \hich\af4\dbch\af31505\loch\f4 Un compil\hich\af4\dbch\af31505\loch\f4 ador para un lenguaje de alto nivel"X" solo traduice programas escritos en este lenguaje, para que solo puedan ser ejecutados en microprocesadores
\par \hich\af4\dbch\af31505\loch\f4 de un cierto tipo. Por ejemplo, un compilador que traduce d eun lenguaje "X" para procesadores de intel o AMD\hich\af4\dbch\af31505\loch\f4 , lso programas que genera un codigo de maquina no pueden ser 
\par \hich\af4\dbch\af31505\loch\f4 ejecutados como ser en procesadores HP, PowerPC o SPARC, u otros, por tener cada procesador sus propios codigos binarios de intrucciones.
\par \hich\af4\dbch\af31505\loch\f4 Ena misma orden de sumar se codifica distinto en proces\hich\af4\dbch\af31505\loch\f4 adores de distintos fabricantes y aun rn modelos no compatibles de un mismo fabricante de microprocesadores.
\par 
\par \hich\af4\dbch\af31505\loch\f4 El compilador para un lenguaje"X" es un programa "inteligente" que recorre repetidamente la zona de memoria donde quedo codificado en ASCII el pro\hich\af4\dbch\af31505\loch\f4 gramda en lenguaje "X". ASI
\par \hich\af4\dbch\af31505\loch\f4 va identificado cada sentencia y datos(variables)que ella ordena opera, a fin de traducirlos en instruciones (codigos= de maquina que le microprocesador pueda ejecutar
\par \hich\af4\dbch\af31505\loch\f4 y codigos de datos que l UAL pueda esperar.
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 **2a.** Con es\hich\af4\dbch\af31505\loch\f4 tos fines (figuta A1.15) **primero** debe determinar el tipo de variable( este caso magnitudes, o sea numeros naturales) que las sentencias ordeana
\par \hich\af4\dbch\af31505\loch\f4 procesar, apa lelvar a cabo las tradiuciones a instruciones para procesar magnitudes y codigos de datso corr\hich\af4\dbch\af31505\loch\f4 espondientes a estas.Entonces,el compilador **antes** de traducir
\par \hich\af4\dbch\af31505\loch\f4 leera la memoria que en ASCII esta escrito"MAGNITUDS" a din de poner en jeugo las subrutinas de tradcion para este tipo de variables.
\par 
\par \hich\af4\dbch\af31505\loch\f4 **2b. ASIGNACIONES DE DRECCIONES A LAS VARIABLES**: como se establecio en relacion con las fiugs.1.3 y1.15 __**xada instruccion debe indicar la direccion del dato**__(valor de la variable)
\par \hich\af4\dbch\af31505\loch\f4 que ordena perar. Es por ello que anters de traducir cada sentencia\hich\af4\dbch\af31505\loch\f4 
 con sus variables en isntrucicones para un procesador, el compilador debe antes de trasduicir cada sentencia con sus variables
\par \hich\af4\dbch\af31505\loch\f4 en intrucciones para un procesador, el compilador debeasignar la dureccion que tenda cada varialbe, que sera tambien la direccio\hich\af4\dbch\af31505\loch\f4 
n de dato cuando se els da un valor a cada variable antes de que se ejecute el programa esto hace en 2.d
\par \hich\af4\dbch\af31505\loch\f4  El compilador reservara (  conforme al enunciado del ejercicio) doy bytes de memorioa para las variables R,P,Q yT, en direcciones de momeoria **arbitr\hich\af4\dbch\af31505\loch\f4 
arias** que en este ejemplo va de A23E hasta A245 (fig A1.14). Esto es **para el compilador la variable R sera la direccion A23E**
\par \hich\af4\dbch\af31505\loch\f4 y la variable P sera la direccion A240, etc *bastando la primer direccion de una variable para identificarla*, dado que se sa\hich\af4\dbch\af31505\loch\f4 be que ocupan 2 celdad todas ls variables tipo"Magnitudes".
\par \hich\af4\dbch\af31505\loch\f4 O sea que el compilador en primer termino solo identifica cada variable por su primer direccion _sinque interese para formar lass instrucciones_ (paso **2c**) _el valor conrecto de la variable_, p
\hich\af4\dbch\af31505\loch\f4 ues **en estas intruvcione se indica donde esta la variuable a fin de poder localizar en memoria este valor**
\par \hich\af4\dbch\af31505\loch\f4 (por lo que no es imprescindible asignar direcciones consecutivas como se hizo). **NO interesa** en la traducion el valor concreto que se le asign\hich\af4\dbch\af31505\loch\f4 a a esa variable
\par \hich\af4\dbch\af31505\loch\f4 antes de la ejecucion del programa, como se hace en 2d, cuando se esbribe dicho valor concreto en las posiciones reservadas para cada variable.
\par 
\par \hich\af4\dbch\af31505\loch\f4 **2c. CODIFICACION DE LAS INSTRUCIONES RESULTANTES DE LA TRADUCCION** __ Una vez asignada a ca\hich\af4\dbch\af31505\loch\f4 
da variable una direccion_ de localizacion, el compilador traduicita la sentencia R=P+Q-T en  instrucviones cuyosd codigos de}{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid14181976 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par \loch\af4\dbch\af31505\hich\f4 \emdash \emdash \emdash \emdash \emdash \loch\f4 150
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 m\'e1\loch\f4 \hich\f4 quina los tomaremos de la fig 1.15. Recordar en relaci\'f3\loch\f4 \hich\f4 n con la fig. 1.2 que todo sucede como si tuvi\'e9\loch\f4 ramos que pensa\hich\af4\dbch\af31505\loch\f4 
r los pasos para hacer esa suma algebraica escrita en un papel con una calculadora de bolsillo. Para ello primero (I1) entramos P al visor (o sea AX). Luego (I2) entramos Q y lo sumamos a P, para obtener P + Q en el visor. A este valor le restamos T, resu
\hich\af4\dbch\af31505\loch\f4 l\hich\af4\dbch\af31505\loch\f4 \hich\f4 tando P + Q - T en el visor (I3), valor que se guarda en la memoria de la calculadora mediante la tecla correspondiente (I4). Como en la descripci\'f3\loch\f4 \hich\f4 
n relacionada con la fig. 1.15. sin la cual esta traducci\'f3\loch\f4 n no puede entenderse, estos 4 pasos en un procesa\hich\af4\dbch\af31505\loch\f4 d\hich\af4\dbch\af31505\loch\f4 \hich\f4 or se realizan mediante las instrucciones I1 a I4. Sus c\'f3
\loch\f4 \hich\f4 digos de m\'e1\loch\f4 \hich\f4 quinas se indican en la zona de instrucciones de la fig. A1.15 desde la direcci\'f3\loch\f4 \hich\f4 n 03AC tomada arbitrariamente (pues bastar\'ed\loch\f4 
a hacer IP = 03AC antes de ejecutar las instrucciones para que s\hich\af4\dbch\af31505\loch\f4 e\hich\af4\dbch\af31505\loch\f4 \hich\f4 
 localice cada una de ellas). Tanto en la suma algebraica R = P + Q - T, como en la R = P + P - Q  traducida en la fig. 1.15, la secuencia de instrucciones 11A14 ordena una asignaci\'f3\loch\f4 
n a AX (cod-op A1), seguida de una suma (cod-op 0305) seguido de una rest\hich\af4\dbch\af31505\loch\f4 a\hich\af4\dbch\af31505\loch\f4 \hich\f4  (cod-op 2B06), seguida de otra asignaci\'f3\loch\f4 \hich\f4 n (cod-op A3). Debajo de cada cod-op est\'e1
\loch\f4 \hich\f4  la direcci\'f3\loch\f4 n de la variable (asignada en 2b) que se ordena operar (no el valor de esta), que obviamente difieren en un caso y en otro.
\par \hich\af4\dbch\af31505\loch\f4 Recordar para las codificaciones que p\hich\af4\dbch\af31505\loch\f4 \hich\f4 ara Intel una direcci\'f3\loch\f4 n o datos XXYY se escribe YYXX.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 **En definitiva el compilador reserva una zona para variables tipo magnitudes, y en otra \'93\loch\f4 \hich\f4 zona de programa\'94\loch\f4 \hich\f4  deja este codificado en bajo nivel (instrucciones en c\'f3
\loch\f4 \hich\f4 digo de m\'e1\loch\f4 quina), que puede ser ejecut\hich\af4\dbch\af31505\loch\f4 ado por la UPC para la que fue traducido.**
\par \hich\af4\dbch\af31505\loch\f4  
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Hasta ac\'e1\loch\f4 \hich\f4  se describi\'f3\loch\f4 \hich\f4  el proceso de datos que es una traducci\'f3\loch\f4 \hich\f4 n. Ahora se supone que se ejecutar\'e1\loch\f4  la secuencia traducida.
\par 
\par 
\par }\pard \ltrpar\ql \li0\ri0\sl280\slmult0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\cf1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 ![imagen1](/Figura A1-15.png)
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 ### **2d. ASIGNACI\'d3\hich\af4\dbch\af31505\loch\f4 \hich\f4 N DE VALOR DE LOS DATOS ANTES DE LA EJECUCI\'d3\loch\f4 N DE LAS INSTRUCCIONES:**
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Cada vez que se ejecuta la secuencia I1 a I4 las variables pueden tener un valor distinto (de hay su denominaci\'f3\loch\f4 n).
\par \hich\af4\dbch\af31505\loch\f4 El valor de cada variable (dato) debe estar asignado antes de ejecuta\hich\af4\dbch\af31505\loch\f4 \hich\f4 
r las instrucciones en las posiciones reservadas para cada variables (zona de datos), antes de que se ejecuten las instrucciones, como se hace acontinuaci\'f3\loch\f4 n.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Una subrutina traductora preparada para \'93\loch\f4 \hich\f4 MAGNITUDES\'94\loch\f4 \hich\f4  traducir\'e1\loch\f4  cada valor de variables decimal - e\hich\af4\dbch\af31505\loch\f4 \hich\f4 scrita en ASCII como d
\'ed\loch\f4 \hich\f4 gitos separados seg\'fa\loch\f4 \hich\f4 n aparecen en la columna de caracteres tildados - en el n\'fa\loch\f4 \hich\f4 
mero binario natural de 16 bits equivalente, pues la UAL solo suma binarios naturales y no combinaciones binaria ASCII, que a dem\'e1\loch\f4 s empiezan arbitrariamen\hich\af4\dbch\af31505\loch\f4 t\hich\af4\dbch\af31505\loch\f4 \hich\f4 
e con 001. o sea que esta traducci\'f3\loch\f4 n es para que la UAL pueda operar los datos a procesar. 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 As\'ed\loch\f4 \hich\f4  el valor decimal 130 de la variable P que en memoria esta en ASCII como los d\'ed\loch\f4 gitos 001100001 00110010 00110000 en las posiciones 0115, 0116 y 0117 (fig. A1.15
\hich\af4\dbch\af31505\loch\f4 \hich\f4 ) quedar\'e1\loch\f4 \hich\f4  reducida como el valor binario natural 000000010000010, igual a 130 que ocupara la posici\'f3\loch\f4 n A240 y A241 asignada a la variable P.
\par \hich\af4\dbch\af31505\loch\f4 El valor decimal 4103 de Q, que el traductor encuentra en binario ASCII en las posiciones o11B a 011E (4 bits) las t\hich\af4\dbch\af31505\loch\f4 \hich\f4 raducir\'e1\loch\f4 \hich\f4 
 como el binario natural 00010000000000111 = 4103 que ocupar\'e1\loch\f4 \hich\f4  la posici\'f3\loch\f4 n A242 y A243.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 del mismo modo, el valor de 4 de T que al compilarlo llega como 00110100 en ASCII, ocupando un byte, pasar\'e1\loch\f4  a ser 0000000000000100 = 4 que el compilador escribir\loch\af4\dbch\af31505\hich\f4 \'e1
\loch\f4 \hich\f4  en la direcci\'f3\loch\f4 \hich\f4 n A244 y A245. Para la variable R (cuyo valor reci\'e9\loch\f4 \hich\f4 n se conocer\'e1\loch\f4 \hich\f4  cuando se ejecute el programa que se est\'e1\loch\f4 \hich\f4 
 traduciendo) el programa compilador (que en este paso es el que se ejecutar\'e1\loch\f4 \hich\f4 ), le reserva la posici\'f3\loch\f4 n A23E y la siguiente (como supo\hich\af4\dbch\af31505\loch\f4 n\hich\af4\dbch\af31505\loch\f4 \hich\f4 
e el enunciado). De esta forma cada variable cuyo valor al ser tipeado ocupa tantos bytes de memoria como d\'ed\loch\f4 \hich\f4 gitos decimales tenga, al ser codificada como magnitud binaria ocupar\'e1\loch\f4 \hich\f4  2bytes, siendo que el m\'e1
\loch\f4 \hich\f4 ximo n\'fa\loch\f4 mero que se puede representar en 16 bits es e\hich\af4\dbch\af31505\loch\f4 l\hich\af4\dbch\af31505\loch\f4  65535 = 1111111111111111.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\hich\af4\dbch\af31505\loch\f4 [^] }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\cf1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 \hich\f4 1 Debe consignarse que la direcci\'f3\loch\f4 
n que se asigna un compilador no son la definitiva, sino que el programa cargado reubica las zonas de instrucciones y datos conforme lo determina el sistema operativo administrador de la mem\hich\af4\dbch\af31505\loch\f4 oria.}{\rtlch\fcs1 \af4\afs24 
\ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 \hich\af4\dbch\af31505\loch\f4 [^] }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\cf1\insrsid10114890 
\par }{\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\wrapdefault\faauto\rin0\lin0\itap0\pararsid11623441 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 
\f4\fs24\kerning1\insrsid11623441\charrsid11623441 \hich\af4\dbch\af31505\loch\f4 \hich\f4 *3.Cuando se ordene ejecutar el programa que el compilador dej\'f3\loch\f4 \hich\f4  en c\'f3\loch\f4 \hich\f4 digo de m\'e1\loch\f4 \hich\f4 
quina en memoria, y la UCP ejecute las instrucciones L a I4, luego de cada una de ellas, el registro AX quedar\'e1\loch\f4 \hich\f4  como se indica a continuaci\'f3\loch\f4 \hich\f4 n. La UAL s\'f3\loch\f4 \hich\f4 lo operar\'e1\loch\f4  en 
\hich\af4\dbch\af31505\loch\f4 \hich\f4 -tes-instrucciones I2 e I3y<que ordenan sumar y restar, respectivamente, indic\'e1\loch\f4 \hich\f4 ndose para las mismas la operaci\'f3\loch\f4 n de la UAL.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Despu\'e9\loch\f4 s de ejecutar Ix:
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *AX = 0000000010000010 que es el valor de P (130d = 0182h; \'e9\loch\f4 ste y otros valores en hexa sirven para el Deb\hich\af4\dbch\af31505\loch\f4 ug).
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Despu\'e9\loch\f4 s de ejecutar I2:
\par \hich\af4\dbch\af31505\loch\f4 *AX = 0001000010001001 que es P + Q (4233 en decimal). Este valor es el resultado de sumar en la UAL \tab ;
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Fig\'f3\loch\f4 n A1.17
\par \hich\af4\dbch\af31505\loch\f4 *"^Tl ( R ) Este valor es el resultado de sumar en la UAL \tab >\tab 0001000010001001 (P + Q)
\par \hich\af4\dbch\af31505\loch\f4 *_3D ( = )\tab \hich\af4\dbch\af31505\loch\f4 +1111111111111011 (bits de T invertidos)
\par \hich\af4\dbch\af31505\loch\f4 *_34_ (4)\tab \tab 
\par \hich\af4\dbch\af31505\loch\f4 *J32. (2j\tab 0001000010000101 (P + Q)-T = R
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *5 L\'dc\loch\f4 \hich\f4 J (9 ) Despu\'e9\loch\f4 \hich\f4 s de ejecutar I4 el valor de AX no cambiar\'e1\loch\f4 , pues I4 ordena que una copia de AX pase a memoria pjgoiaAl.16 AX = 0001000010000101 = 1085h
\par \hich\af4\dbch\af31505\loch\f4 *4.La e\hich\af4\dbch\af31505\loch\f4 \hich\f4 jecuci\'f3\loch\f4 \hich\f4 n de I4 ordena que en la direcci\'f3\loch\f4 \hich\f4 
n A23E y en la siguiente (asignadas a R) copiar el valor de AX (8510 en hexa), por lo que luego de ejecutarse I4 en memoria se tendr\'e1\loch\f4  para R los valores 10 y 85 indicados en la figura Al. 17
\par \hich\af4\dbch\af31505\loch\f4 *5.En modo texto, la subr\hich\af4\dbch\af31505\loch\f4 \hich\f4 utina de impresi\'f3\loch\f4 \hich\f4 n dejar\'e1\loch\f4 \hich\f4  en posiciones sucesivas de memoria ios caracteres a imprimir, cada uno en c\'f3\loch\f4 
\hich\f4 digo ASCII. Previamente dicha subrutina interpretar\'e1\loch\f4 \hich\f4  la orden de impresi\'f3\loch\f4 \hich\f4 n (en este caso R = valor de R), siendo que el valor de R que est\'e1\loch\f4  en A23E y A23\hich\af4\dbch\af31505\loch\f4 F
\hich\af4\dbch\af31505\loch\f4 \hich\f4  deber\'e1\loch\f4 \hich\f4  pasarlo a d\'ed\loch\f4 \hich\f4 gitos decimales codificados en ASCII. Esto es, determinar\'e1\loch\f4 \hich\f4 
 que el valor de R, que es 0001000010000101 es el 4229, el cual en ASCII resultar\'e1\loch\f4  00110100 00110010 00110010 00111001, como aparece en memoria en la figura Al. 16 Antes de esto\hich\af4\dbch\af31505\loch\f4 s\hich\af4\dbch\af31505\loch\f4 
\hich\f4  c\'f3\loch\f4 \hich\f4 digos aparecen los c\'f3\loch\f4 digos de R y el de igual (=), como se indica.
\par \hich\af4\dbch\af31505\loch\f4 #EJERCICIO COMPLEMENTARIO:
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Usando el Debug como se explic\'f3\loch\f4 \hich\f4  en la secci\'f3\loch\f4 n 1.6, escribir en memoria los datos e instrucciones como quedaron en la fig, Al. 15. Luego ejecutar cada instrucc
\hich\af4\dbch\af31505\loch\f4 \hich\f4 i\'f3\loch\f4 n y verificar que los resultados concuerden con las respuestas dadas para 3 y 4.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Dado que R no se conoce, se comienza por escribir el valor de P en ia direcci\'f3\loch\f4 n A240, seguido por los valores de Q y T
\par \hich\af4\dbch\af31505\loch\f4 *-E A240 (Comando para examinar memoria y escribir en\hich\af4\dbch\af31505\loch\f4 \hich\f4  ella si se desea, siendo que xx indica el contenido \'93\loch\f4 \hich\f4 basura\'94\loch\f4  pre-existente)
\par \hich\af4\dbch\af31505\loch\f4 *309D:A240\tab xx.82\tab xx.00\tab xx.07\tab xx.10\tab xx.04 xx.OQ J (0082 se escribe 8200, etc.)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Para corroborar que los valores reci\'e9\loch\f4 n escritos son los nuevos contenidos de las posiciones modifica\hich\af4\dbch\af31505\loch\f4 das, otra vez se examina con E -E A240 J\tab 
(Examinar memoria para verificar si la escritura anterior fue correcta)
\par \hich\af4\dbch\af31505\loch\f4 *309D:A240\tab 82.\tab 00.\tab 07.\tab 10.\tab 04.\tab 00. J (la escritura fue correcta)
\par \hich\af4\dbch\af31505\loch\f4 *_\tab (A240)\tab (A241)\tab (A242)\tab (A243)\tab (A244)\tab \hich\f4 (A245) Entre par\'e9\loch\f4 ntesis las direcciones
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *Con el mismo procedimiento se escriben los c\'f3\loch\f4 \hich\f4 digos de m\'e1\loch\f4 quina (cod-op + dir del dato) de las instrucciones a partir de 03AC
\par \hich\af4\dbch\af31505\loch\f4 *xx.42 xx-A2 xx.2B (A240 se escribe 40A2, etc.) xx.A2 J (los cod-op no se invierten: 0306 sigue igual, etc) (Examinar memoria para \hich\af4\dbch\af31505\loch\f4 verificar si la escritura anterior fue correcta)
\par \hich\af4\dbch\af31505\loch\f4 *Al.\tab 40.\tab A2.\tab 03.\tab 06.\tab 42.\tab A2.\tab 2B.
\par \hich\af4\dbch\af31505\loch\f4 *06.\tab 44.\tab A2.\tab A3.\tab 3E\tab 42\tab J
\par \hich\af4\dbch\af31505\loch\f4 *(03B4)\tab (03B5)\tab (03B6)\tab (03B7)\tab (03B8)\tab \hich\f4 (03B9) Entre par\'e9\loch\f4 ntesis algunas direcciones de los valores
\par \hich\af4\dbch\af31505\loch\f4 *(comando al Debug para examinar el valor del Registro\hich\af4\dbch\af31505\loch\f4  IP y cambiarlo si se desea)
\par \hich\af4\dbch\af31505\loch\f4 *(el Debug informa que actualmente el IP contiene 0100)
\par \hich\af4\dbch\af31505\loch\f4 *(al lado de los dos puntos que deja el Debug escribimos 03AC, nuevo valor que debe tener IP)
\par \hich\af4\dbch\af31505\loch\f4 *-R J (Antes de ejecutar se deben examinan registros, siendo que el De\hich\af4\dbch\af31505\loch\f4 \hich\f4 bug muestra la informaci\'f3\loch\f4 n siguiente)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *AX=0000 BX=0000 CX=0000 DX=0000 SP=FFEE BP=000\'fc\loch\f4  SI=0000 DI=0000 ES=309D SS=309D CS=309D IP=03AC NV UP El PL NZ NA PE NC
\par \hich\af4\dbch\af31505\loch\f4 *309D:03B4\tab \hich\f4 A140A2 (en negrita se verifica que, como debe ser, el IP est\'e1\loch\f4 \hich\f4  en 03AC, y que la pr\'f3\loch\f4 xim\hich\af4\dbch\af31505\loch\f4 a instr. a ejecutar es A140A2)
\par \hich\af4\dbch\af31505\loch\f4 *\hich\f4 \emdash \loch\f4 T J\tab \hich\f4 (Orden para ejecutar una instrucci\'f3\loch\f4 n L)
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 *AX=0082 BX=0000 CX=0000 DX=0000 SP=FFEE BP=0000 SI=0000 DI=0000 ES=309D SS=309D CS=309D IP=03AF NV UP El PL NZ NA PE NC 309D:03AF 030642A2 (pr\'f3\loch\f4 \hich\f4 xima instrucci\'f3\loch\f4 n I2 a ejecutar)
\par \hich\af4\dbch\af31505\loch\f4 *Co\hich\af4\dbch\af31505\loch\f4 \hich\f4 nstatamos que I\'ed\loch\f4 \hich\f4  se ha ejecutado correctamente, pues se ha cumplido la orden que portaba su c\'f3\loch\f4 \hich\f4 
digo: escribir en AX una copia del contenido de la posici\'f3\loch\f4 \hich\f4 n A240, que es 0082. Tambi\'e9\loch\f4 \hich\f4 n ha cambiado autom\'e1\loch\f4 \hich\f4 ticamente IP a 03AF, para apuntar la direcci\'f3\loch\f4 n de I2, co
\hich\af4\dbch\af31505\loch\f4 m\hich\af4\dbch\af31505\loch\f4 \hich\f4 o hab\'ed\loch\f4 \hich\f4 amos previsto al hablar de IP. Asimismo vemos que el c\'f3\loch\f4 digo 030642A2 de I2 es el correcto, por lo que podemos ejecutar I2}{\rtlch\fcs1 
\af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid11623441 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af4\afs24 \ltrch\fcs0 \f4\fs24\kerning1\insrsid10114890 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * T  (Ejecuci\'f3\loch\f4 \hich\f4 n de la instrucci\'f3\loch\f4 n I2)
\par \hich\af4\dbch\af31505\loch\f4 AX = 1089  BX=0000   CX=0000   DX=0000   SO= FFEE   BP=0000   SI=0000 DI=0000
\par \hich\af4\dbch\af31505\loch\f4 ES=309D   SS=309D   CS=309D   IP=03B3   NV   UP   EI   PL   NZ   NA   PE   NC
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 309D:03B3   2b0644A2  (pr\'f3\loch\f4 \hich\f4 xima instrucci\'f3\loch\f4 n I3 a ejecutar)
\par 
\par \hich\af4\dbch\af31505\loch\f4 * Se ha realizado lo que ordenaba el I2 :\hich\af4\dbch\af31505\loch\f4 \hich\f4  sumar el valor 0082 de AX el contenido de la direcci\'f3\loch\f4 \hich\f4 
n A244 (que es 1007), y el resultado (1089) escribirlo en lugar de 0082. Tambi\'e9\loch\f4 \hich\f4 n se verifica que el 2B0644A2 es el c\'f3\loch\f4 \hich\f4 digo de I3, instrucci\'f3\loch\f4 n de resta que pasaremos a ejecutar:
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * T  (Ejecuci\'f3\loch\f4 n de la ins\hich\af4\dbch\af31505\loch\f4 \hich\f4 trucci\'f3\loch\f4 n I3)
\par \hich\af4\dbch\af31505\loch\f4 AX = 1085  BX=0000   CX=0000   DX=0000   SP= FFEE   BP=0000   SI=0000 DI=0000
\par \hich\af4\dbch\af31505\loch\f4 ES=309D   SS=309D   CS=309D   IP=03B7   NV   UP   EI   PL   NZ   NA   PE   NC
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 309D:03B7   A346A2  (pr\'f3\loch\f4 \hich\f4 xima instrucci\'f3\loch\f4 n I4 a ejecutar)
\par \hich\af4\dbch\af31505\loch\f4 * I3 ordena restar a AX el cont\hich\af4\dbch\af31505\loch\f4 enido de A246, que es 0004h, o sea que la UAL ha efectuado 1089h - 0004h = 1085h, como aparece en AX.
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * T  (Ejecuci\'f3\loch\f4 \hich\f4 n de la instrucci\'f3\loch\f4 n I4)
\par \hich\af4\dbch\af31505\loch\f4 AX = 1085  BX=0000   CX=0000   DX=0000   Sp= FFEE   BP=0000   SI=0000  DI=0000
\par \hich\af4\dbch\af31505\loch\f4 ES=309D   SS=309D   CS=309D   IP=03B\hich\af4\dbch\af31505\loch\f4 A   NV   UP   EI   PL   NZ   NA   PE   NC
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 309D:03BA   XXXXXX  (no interesa cu\'e1\loch\f4 \hich\f4 l sea la instrucci\'f3\loch\f4 \hich\f4 n pues no se ejecutar\'e1\loch\f4 ).
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Es necesario verificar que en las direcciones A23E y A23F se escribi\'f3\loch\f4 \hich\f4  el resultado que est\'e1\loch\f4  en AX Hacemos:
\par \hich\af4\dbch\af31505\loch\f4 * E E23E    (Examinar memo\hich\af4\dbch\af31505\loch\f4 ria)
\par \hich\af4\dbch\af31505\loch\f4 309D:E23E)    85.       10.
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 * Con lo cual constatamos que efectivamente se cumpli\'f3\loch\f4  lo que se ordeno al I4
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ** CUESTIONARIO **
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 1. \'bf\loch\f4 \hich\f4 Qu\'e9\loch\f4 \hich\f4  debe llegar a memoria antes de ejecutar un programa y cu\'e1\loch\f4 l debe ser el valor del IP?
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 2. \'bf\loch\f4 \hich\f4 Por qu\'e9\hich\af4\dbch\af31505\loch\f4  las instrucciones de cada secuencia debe estar en posiciones consecutivas en memoria?
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 3. \'bf\loch\f4 \hich\f4 Por qu\'e9\loch\f4  las variables no deben necesariamente estar una debajo de la otra?
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 4. \'bf\loch\f4 \hich\f4 Por qu\'e9\loch\f4  no hay problemas si las instrucciones y los datos comparten una misma memoria?
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 5. Durante la ejecuci\'f3\loch\f4 \hich\f4 n de un programa \'bf\loch\f4 \hich\f4 c\'f3\loch\f4 \hich\f4 mo se localizan las instrucciones si ocupan distinta cantidad de celdas en memoria? u \'bf\loch\f4 \hich\f4 c
\'f3\loch\f4 \hich\f4 mo se localiza el dato que cada instrucci\'f3\loch\f4 n opera?
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 6. \'bf\loch\f4 \hich\f4 Hay alg\'fa\loch\f4 \hich\f4 n problema si la direcci\'f3\loch\f4 \hich\f4 n presente en una instrucci\'f3\loch\f4 n coinci\hich\af4\dbch\af31505\loch\f4 \hich\f4 de con su c\'f3\loch\f4 
\hich\f4 digo-op \'f3\loch\f4 \hich\f4  con el cod-op de otra instrucci\'f3\loch\f4 n?
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 7. En las instrucciones tratado, \'bf\loch\f4 \hich\f4 qui\'e9\loch\f4 n indica que el resultado debe ir a AX?
\par 
\par \hich\af4\dbch\af31505\loch\f4 \hich\f4 Mas adelante se trata la representaci\'f3\loch\f4 \hich\f4 n de los n\'fa\loch\f4 \hich\f4 meros enteros y reales, y al final de los temas tambi\'e9\loch\f4 n se dan ejercici\hich\af4\dbch\af31505\loch\f4 \hich\f4 
os integradores, tambi\'e9\loch\f4 n para ser verificados mediante el Debug.
\par 
\par 
\par 
\par 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b03041400060008000000210038172333d50600008d1a0000160000007468656d652f7468656d652f
7468656d65312e786d6cec595d8b1b37147d2ff43f0cf3eef86bc61f4bbcc11edb499bdd24c44e4a1eb5b6ec5156333223793726044af2582894a6a50f0df4ad
0fa56d2081bea4bf66db943685fc855e69c663c996bbc992c252b286654673eed5d1bdd2b99ad1c54bf722ea1ce1841316b7dcf28592ebe078c4c6249eb6dc5b
c37ea1e13a5ca0788c288b71cb5d60ee5edafdf0838b68478438c20ed8c77c07b5dc5088d94eb1c847d08cf80536c3313c9bb02442026e9369719ca063f01bd1
62a554aa15234462d78951046e8760e38cb1737d322123ecee2eddf728f4110b2e1b46341948e738b3d1b0e3c3b244f0050f68e21c21da72a1a7313b1ee27bc2
7528e2021eb4dc92fa738bbb178b682733a2628bad66d7577f995d66303eaca83e93e941dea9e7f95ead9dfb57002a3671bd7aafd6abe5fe14008d4630d2948b
eed3ef343b5d3fc36aa0f4d2e2bb5bef56cb065ef35fdde0dcf6e5cfc02b50eadfdbc0f7fb0144d1c02b508af737f09e57af049e8157a0145fdbc0d74bedae57
37f00a1452121f6ea04b7ead1a2c479b43268c5eb1c29bbed7af5732e72b14cc867c76c92e262c16dbe65a84eeb2a40f0009a44890d8118b199ea011cce30051
729010678f4c4398783314330ecda54aa95faac27ff9f3d4958a08dac148b396bc8009df68927c1c3e4ac84cb4dc8fc1abab415ebff8f1f58b67cec9c3e7270f
7f3979f4e8e4e1cfa923c3ea0a8aa7bad5abefbff8fbc9a7ce5fcfbe7bf5f82b3b9eebf8df7ffaecb75fbfb40361a4ab10bcfcfae91fcf9fbefce6f33f7f786c
81b71374a0c38724c2dcb9868f9d9b2c8281a91098ccf141f27616c31011dda21d4f398a91ecc5e2bf2742037d6d8128b2e03ad88ce0ed0424c606bc3cbf6b10
1e84c95c108bc7ab616400f719a31d9658a37055f6a58579388fa7f6ce93b98ebb89d091adef00c5467e7bf319682bb1b90c426cd0bc41512cd014c75838f219
3bc4d832ba3b841871dd27a384713611ce1de27410b18664480e8cd9b432ba4222c8cbc24610f26dc466ffb6d361d436ea2e3e3291b02a10b5901f626a84f132
9a0b14d95c0e5144f580ef2111da480e16c948c7f5b8804c4f31654e6f8c39b7d95c4f60bc5ad2af82bcd8d3be4f1791894c0439b4f9dc438ce9c82e3b0c4214
cd6cd80189431dfb113f84298a9c1b4cd8e0fbcc5c21f21ef280e2ade9be4db091eed3d5e01628ab4e693541e4937962c9e565cc8cf93b58d009c24a6a40f80d
3d8f487caab8afc9baffdfca3a08e9cb6f9f5846755e05bd9d10eb8abab226e3db70ebe21db0644ccebf7677d13cbe8161b96c16b0f7d2fd5ebaddffbd746f5b
cfef5eb0571a0df22db78ae9565d6ddca3adfbf609a174201614ef71b575e75099c67d689476eaad15e7ef71b3102ee54a860e0cdc3441cac64998f884887010
a219ecefcbae7432e599eb2977668cc3b65f355b7d4b3c9d47fb6c9cbeae96cbf2d534150f8ec4aabde4e7edf0aa215274adbe7a05cbdd2bb653f5aabc24206d
df8684d69949a26a21515f36ca20a91773089a85841ad93b61d1b4b06848f7cb546db0006a795660ebe4c086abe5fa1e988011bc51218ac7324f69aa97d955c9
7c9799de164c6306c03e62390356996e4aae5b872747974eb537c8b441429b6e2609151955c37888e08b8cfa9892a5305b101b515ed178db5c37572935e8c950
2c57c38a46bdf16fc1386baec16e5d1b68ac2b058d9de3965babfa30654668d67227f0da0f97d10ce60e975b5e44a7f0f56c249274c19f45596609175dc4c334
e04a7452358888c0894349d472e5f0f3d94063a5218a5bb90282706ec9354156ce1b3948ba99643c99e091d0d3aeb5c848a7b7a0f0e92ab03e55e667074b4b36
87740fc2f1b17340e7c94d0453ccaf976500c784c3d79f721acd3181cf99b990ade6df5a61ca6457ff9ea8e650da8ee82c445945d1c53c852b29cfe9a8bb3c06
da5d366608a81692ac101e4c6581d5836a54d3bc6aa41cb656ddd38d64e434d15cd54c435564d5b48ba9d1c3b20cacc5f26c455e63b50c31944bbdc2a7d2bd2e
b9cda5d6aded13f22a0101cfe367a9ba6f5010346aabce0c6a92f1a60c4bcdce5acddab11ce029d4dea44868c5a7b674bb16b7bc4658bb83c633557eb05b9fb5
d03459ee2b55a4d5c9877e34c10eee827874e123f09c0aae5209070f09820dd14055cb54366089dc13d9d2802b679e90967bbfe4b7bda0e2078552c3ef15bcaa
572a34fc76b5d0f6fd6ab9e7974bdd4ee50114161146653f3d75e9c3a728bac8ce5e54fbc6f94bb4fcda7661c4a22253e72a45455c9dbf942bc6f94b7a96e20c
e5f18aeb10109dfbb54abf596d766a8566b5dd2f78dd4ea3d00c6a9d42b716d4bbfd6ee0379afd07ae73a4c05ebb1a78b55ea3502b0741c1ab9524fd46b350f7
2a95b6576f377a5efb41b68d8191a7f291c502c2ab78edfe030000ffff0300504b0304140006000800000021000dd1909fb60000001b01000027000000746865
6d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e435
0d363f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d262452
282e3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173
d9850528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0fbfff0000001c02000013000000000000000000
00000000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b0000000000000000
0000000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c000000000000000000000000001902
00007468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d001400060008000000210038172333d50600008d1a0000160000000000
0000000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b0100002700
000000000000000000000000df0900007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000da0a00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax371\lsdlockeddef0\lsdsemihiddendef0\lsdunhideuseddef0\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 5;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 9;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 1;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 2;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 3;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 4;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 5;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 6;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 7;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 8;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 header;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footer;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index heading;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of figures;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope return;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation reference;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 line number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 page number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote text;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of authorities;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 macro;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 toa heading;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 5;\lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Closing;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Signature;\lsdsemihidden1 \lsdunhideused1 \lsdpriority1 \lsdlocked0 Default Paragraph Font;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 4;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Message Header;\lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Salutation;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Date;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Note Heading;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Block Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 FollowedHyperlink;\lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;
\lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Document Map;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Plain Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 E-mail Signature;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Top of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Bottom of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal (Web);\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Acronym;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Cite;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Code;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Definition;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Keyboard;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Preformatted;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Sample;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Typewriter;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Variable;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation subject;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 No List;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Balloon Text;\lsdpriority39 \lsdlocked0 Table Grid;
\lsdsemihidden1 \lsdlocked0 Placeholder Text;\lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;\lsdpriority60 \lsdlocked0 Light Shading;\lsdpriority61 \lsdlocked0 Light List;\lsdpriority62 \lsdlocked0 Light Grid;
\lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdpriority64 \lsdlocked0 Medium Shading 2;\lsdpriority65 \lsdlocked0 Medium List 1;\lsdpriority66 \lsdlocked0 Medium List 2;\lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdpriority68 \lsdlocked0 Medium Grid 2;
\lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdpriority70 \lsdlocked0 Dark List;\lsdpriority71 \lsdlocked0 Colorful Shading;\lsdpriority72 \lsdlocked0 Colorful List;\lsdpriority73 \lsdlocked0 Colorful Grid;\lsdpriority60 \lsdlocked0 Light Shading Accent 1;
\lsdpriority61 \lsdlocked0 Light List Accent 1;\lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;
\lsdsemihidden1 \lsdlocked0 Revision;\lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;
\lsdpriority72 \lsdlocked0 Colorful List Accent 1;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdpriority60 \lsdlocked0 Light Shading Accent 2;\lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdpriority62 \lsdlocked0 Light Grid Accent 2;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;\lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;
\lsdpriority72 \lsdlocked0 Colorful List Accent 2;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;\lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdpriority61 \lsdlocked0 Light List Accent 3;\lsdpriority62 \lsdlocked0 Light Grid Accent 3;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;\lsdpriority70 \lsdlocked0 Dark List Accent 3;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;
\lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;\lsdpriority60 \lsdlocked0 Light Shading Accent 4;\lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdpriority62 \lsdlocked0 Light Grid Accent 4;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdpriority70 \lsdlocked0 Dark List Accent 4;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;
\lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdpriority60 \lsdlocked0 Light Shading Accent 5;\lsdpriority61 \lsdlocked0 Light List Accent 5;\lsdpriority62 \lsdlocked0 Light Grid Accent 5;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;\lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;
\lsdpriority72 \lsdlocked0 Colorful List Accent 5;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdpriority61 \lsdlocked0 Light List Accent 6;\lsdpriority62 \lsdlocked0 Light Grid Accent 6;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdpriority70 \lsdlocked0 Dark List Accent 6;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;
\lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;\lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;\lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdsemihidden1 \lsdunhideused1 \lsdpriority37 \lsdlocked0 Bibliography;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;\lsdpriority41 \lsdlocked0 Plain Table 1;\lsdpriority42 \lsdlocked0 Plain Table 2;\lsdpriority43 \lsdlocked0 Plain Table 3;\lsdpriority44 \lsdlocked0 Plain Table 4;
\lsdpriority45 \lsdlocked0 Plain Table 5;\lsdpriority40 \lsdlocked0 Grid Table Light;\lsdpriority46 \lsdlocked0 Grid Table 1 Light;\lsdpriority47 \lsdlocked0 Grid Table 2;\lsdpriority48 \lsdlocked0 Grid Table 3;\lsdpriority49 \lsdlocked0 Grid Table 4;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 1;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 1;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 1;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 1;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 1;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 2;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 2;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 2;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 2;
\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 3;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 3;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 3;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 3;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 3;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 4;
\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 4;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 4;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 4;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 4;
\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 4;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 5;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 5;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 5;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 5;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 5;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 6;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 6;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 6;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 6;
\lsdpriority46 \lsdlocked0 List Table 1 Light;\lsdpriority47 \lsdlocked0 List Table 2;\lsdpriority48 \lsdlocked0 List Table 3;\lsdpriority49 \lsdlocked0 List Table 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful;\lsdpriority52 \lsdlocked0 List Table 7 Colorful;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 List Table 2 Accent 1;\lsdpriority48 \lsdlocked0 List Table 3 Accent 1;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 1;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 1;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 1;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 List Table 2 Accent 2;\lsdpriority48 \lsdlocked0 List Table 3 Accent 2;\lsdpriority49 \lsdlocked0 List Table 4 Accent 2;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 2;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 3;
\lsdpriority47 \lsdlocked0 List Table 2 Accent 3;\lsdpriority48 \lsdlocked0 List Table 3 Accent 3;\lsdpriority49 \lsdlocked0 List Table 4 Accent 3;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 3;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 4;\lsdpriority47 \lsdlocked0 List Table 2 Accent 4;
\lsdpriority48 \lsdlocked0 List Table 3 Accent 4;\lsdpriority49 \lsdlocked0 List Table 4 Accent 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 4;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 4;
\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 List Table 2 Accent 5;\lsdpriority48 \lsdlocked0 List Table 3 Accent 5;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 5;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 5;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 5;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 List Table 2 Accent 6;\lsdpriority48 \lsdlocked0 List Table 3 Accent 6;\lsdpriority49 \lsdlocked0 List Table 4 Accent 6;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 6;}}{\*\datastore 010500000200000018000000
4d73786d6c322e534158584d4c5265616465722e362e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffff0c6ad98892f1d411a65f0040963251e5000000000000000000000000702e
ea6a65c8d201feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}